<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->

<?rfc strict="yes" ?>
<?rfc toc="yes" ?>
<?rfc tocdepth="4" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<?rfc private="DMARC.org" ?>

<rfc category="info" docName="draft-dmarc-base-00-03"
     ipr="noModificationTrust200902">

<front>

 <title abbrev="DMARC">
	Domain-based Message Authentication, Reporting and Conformance (DMARC)
 </title>

 <author fullname="Murray S. Kucherawy" initials="M. S." surname="Kucherawy"
         role="editor">
  <organization>Cloudmark</organization>
  <address>
   <postal>
    <street>128 King St., 2nd Floor</street>
    <city>San Francisco</city>
    <region>CA</region>
    <code>94107</code>
    <country>USA</country>
   </postal>
   <phone>+1 415 946 3800</phone>
   <email>msk@cloudmark.com</email>
  </address>
 </author>
    
 <date year="2012" />

 <area>Applications</area>
 <workgroup>Network Working Group</workgroup>

 <keyword>domain</keyword>
 <keyword>email</keyword>
 <keyword>security</keyword>
 <keyword>messaging</keyword>
 <keyword>dkim</keyword>
 <keyword>spf</keyword>
 <keyword>authentication</keyword>
 <keyword>reporting</keyword>
 <keyword>conformance</keyword>

 <abstract>
  <t> The email ecosystem currently lacks a cohesive mechanism through
      which email senders and receivers can make use of multiple
      authentication protocols in an attempt to establish reliable domain
      identifiers.  This lack of cohesion prevents receivers from providing
      domain-specific feedback to senders regarding the accuracy of
      authentication deployments.  Inaccurate authentication deployments
      preclude receivers from safely taking deterministic action against
      email that fails authentication checks.  Finally, email senders do
      not have the ability to publish policies specifying actions that should
      be taken against email that fails multiple authentication checks. </t>

  <t> This memo presents a proposal for a scalable mechanism by which an
      organization can express, using the Domain Name System, domain-level
      policies and preferences for message validation, disposition, and
      reporting with predictable and accurate results.   </t>

  <t> The enclosed proposal is not intended to introduce mechanisms that
      provide elevated delivery privilege of authenticated email.  The
      proposal presents a mechanism for policy distribution that enables
      a continuum of increasingly strict handling of messages that fail
      multiple authentication checks, from no action, through silent
      reporting, up to message rejection.</t>
 </abstract>
</front>

<middle>
 <section title="License">
  <t> As of the date shown at the top right of this page, the Contributors
      have made this Specification available under the Open Web Foundation
      Contributor License Agreement Version 1.0, which is
      available at: http://www.dmarc.org/cla.html </t>

  <t> You can review the signed copies of the Open Web Foundation Contributor
      License Agreement Version 1.0 for this Specification at:
      http://www.dmarc.org/CLAs/ </t>

  <t> The current list of Contributors can be found at:
      http://www.dmarc.org/contributors.html </t>

  <t> Your use of this Specification may be subject to other third party
      rights. THIS SPECIFICATION IS PROVIDED "AS IS". The contributors
      expressly disclaim any warranties (express, implied, or otherwise),
      including implied warranties of merchantability, non-infringement,
      fitness for a particular purpose, or title, related to the
      Specification. The entire risk as to implementing or otherwise using
      the Specification is assumed by the Specification implementer and
      user. IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR
      LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR
      CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION
      OF ANY KIND WITH RESPECT TO THIS SPECIFICATION OR ITS GOVERNING
      AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING
      NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY
      HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </t>
 </section>

 <section title="Introduction">
  <t> For years, various receivers have tried to protect senders who are
      known to authenticate their outbound email from phishing by using
      <xref target="DKIM"/> and/or <xref target="SPF"/> results to
      detect and block unauthorized email.  At the same time, senders
      have leveraged SPF-authorized and DKIM-signed messages to achieve
      domain-level email authentication.  However, a broadly accepted
      mechanism to assert domain-specific message-disposition policies,
      or to request reporting of same, has been lacking.</t>

  <t>The fundamental idea behind these approaches is that if a sender
     authenticates all legitimate outbound mail using the authentication
     protocols SPF and DKIM, then receivers can quarantine or reject
     unauthenticated mail purporting to be from that sender.  Over time,
     one-on-one relationships were established between select senders and
     receivers with privately communicated means to assert policy and receive
     message traffic and authentication disposition reporting.  Although these
     ad hoc practices have been generally successful, they require significant
     manual coordination between parties.</t>

  <t>This memo defines Domain-based Message Authentication, Reporting and
     Compliance (DMARC), a mechanism by which email operators leverage
     existing authentication and policy advertisement technologies to enable
     both message-stream feedback and enforcement of policies against
     unauthenticated email.</t>

  <t>DMARC encourages senders and receivers to collaborate by monitoring
     message authentication and disposition, building confidence in the
     coverage and accuracy of email authentication, and moving -- one domain at
     a time -- towards the goal of deploying the strongest possible message
     handling policies. </t>

  <t>For the purpose of discussion, this document defines the word
     "authentication" to be inclusive of techniques used to verify message
     integrity and/or sending-entity authorization.  Exceptions to this
     convention are expressly noted. </t>

  <t>The DMARC method involves evaluation of messages during an SMTP session
     on entry to a specific receiving Administrative Management Domain
     (ADMD; see <xref target="EMAIL-ARCH"/>).  DMARC is thus applied by
     message transport software and not by user agents or their respective
     protocols such as POP or IMAP. </t>

  <t>DMARC operates as a policy layer atop implementations of DKIM and
     SPF.  These technologies are the building blocks of DMARC as each
     technology is widely deployed, supported by mature tools, and is readily
     available to both senders and receivers.  They are also complementary,
     as each is resilient to many of the failure modes of the other.
     Furthermore, neither of these require direct user interaction to be
     successful, nor are they burdened by heavy considerations such as
     public key infrastructure, which have inhibited the uptake of other
     message signing and encryption protocols.  (For further discussion,
     see Section 1 of <xref target="DKIM"/>.)  In addition, DMARC can
     operate even if a message author has chosen to deploy only one of
     these. </t>

  <t>DMARC differs from previous approaches to policy advertisement (e.g.,
     <xref target="SPF"/> and <xref target="ADSP"/>) in that:

     <list style="symbols">
      <t>Authentication technologies are:
         <list style="numbers">
          <t>decoupled from any technology-specific policy mechanisms; and</t>
          <t>used solely to establish reliable per-message domain-level
             identifiers.</t>
         </list> </t>

      <t>Multiple authentication technologies are utilized to:
         <list style="numbers">
          <t>reduce the impact of transient authentication errors; and</t>
          <t>create authenticated message streams that are resilient to
             site-specific configuration errors and deployment gaps.</t>
         </list> </t>

      <t>Receiver-generated feedback is employed to establish confidence in
         authentication practices, enabling widespread, safe enforcement of
         strong message disposition policy.</t>

      <t>The domain name extracted from a message's RFC5322.From field is
         the primary identifier in the DMARC mechanism.  This identifier is
         used in conjunction with the results of the underlying authentication
         technologies to evaluate results under DMARC.</t>

     </list> </t>

  <section title="Scalability">
   <t>DMARC is designed to support the extreme scalability requirements
      that characterize the systemic problem of identifying the origination
      and legitimacy of email.  DMARC seeks to preserve the positive aspects
      of the current email infrastructure, such as the ability for anyone to
      communicate with anyone else without introduction.</t>

   <t>The DMARC mechanism specifically does not introduce third-party policy
      publishers or feedback consumers.  Third parties are not prevented,
      however, from using these mechanisms in private and/or public contexts.</t>
  </section> <!-- Scalability -->

  <section title="Anti-Phishing">
   <t>This document is significantly informed by ongoing efforts to enact
      large-scale, Internet-wide, anti-phishing measures.  Whereas DMARC can
      only be used to combat specific forms of exact-domain phishing directly,
      the DMARC mechanism is viewed more importantly as a substantial step
      forward in terms of creating reliable and defensible message streams.</t>

   <t>Specifically, DMARC does not attempt to solve problems related to
      use of Cousin Domains or abuse of the RFC5322.From "display name". </t>
  </section> <!-- Anti-Phishing -->

  <section title="Towards An Authenticated Future">
   <t>The DMARC mechanism is designed to enable highly accurate
      Internet-scale deployments of email authentication technologies.
      Anti-phishing measures are a compelling instance of what
      widely-deployed authenticated messaging streams can enable.  As email
      authentication deployments continue to mature, additional
      authentication-enabled services are expected to be developed. </t>
  </section> <!-- Future -->
 
  <section title="Experiment Team" anchor="team">
   <t>[NOTE TO RFC EDITOR: Remove this section prior to publication.] </t>

   <t>The contributors to DMARC share the view that layering security on
      top of Internet Mail requires a partnership between those who send mail
      (who sign messages with DKIM, authorize email servers with SPF, and
      consume feedback to achieve highly-accurate deployments) and those who
      receive mail (who test the authenticity assertions from senders and
      report authentication results back to senders to enable authentication
      accuracy and domain-usage intelligence).  The team that produced this
      specification acknowledges that this new security layer is optional for
      the Internet community in general, though of increasing value to our
      peers due to the urgent need to respond to the persistent threats of
      phishing and malware distribution.</t>

   <t>If this first public informational draft addresses your use cases for
      improved messaging security, please contact the authors expressing your
      interest to work with us on implementation testing and rolling 
      implementation experience back into future versions of DMARC.  It is
      the intention of the contributors to submit DMARC into a new IETF
      Working Group on a formal standards track, but only after gaining
      significant implementation experience.  Please join us in making
      Internet messaging more secure. </t>
  </section>
 </section> <!-- Introduction -->

 <section title="Requirements">
  <t>Specification of DMARC is guided by the following high-level
     requirements, security dependencies, detailed requirements, and items
     that are documented as out-of-scope.</t>
  <section title="High-Level Requirements">
   <t>At a high level, DMARC is designed to satisfy the following requirements:

      <list style="symbols">
       <t> Minimize false positives. </t>
       <t> Provide robust authentication reporting. </t>
       <t> Allow senders to assert policy for consumption by receivers. </t>
       <t> Reduce the amount of successfully delivered phish. </t>
       <t> Work at Internet scale. </t>
       <t> Minimize complexity. </t>
       <t> Produce an RFC draft -- supported by real-world operational
           experience -- that can be submitted to the IETF for publication as a
           proposed Internet Standard. </t>
      </list>
   </t>
  </section>

  <section title="Security Dependencies">
   <t>Security issues DMARC observes:

      <list style="symbols">
       <t> The security of DMARC and its underlying technologies (SPF, DKIM)
           depend on the security of the DNS. </t>
       <t> DMARC depends upon DKIM, and thus security of the private keys
           used for signing messages must be assured. </t>
       <t> DMARC depends upon SPF, and thus the listing of authorized servers
           in the author domain's SPF record must be accurately maintained. </t>
       <t> In addition to the above, authors must ensure that their outbound
           mail servers are not sending unauthorized mail (e.g., are not
           infected by spam bots or malware, or relaying messages from
	   systems so afflicted). </t>
       <t> DMARC relies on the concept of message quarantining as a valid
           message disposition, and thus relies on the various components
           of the recipient's mailbox service provider and the user interface
           to make that facility available. </t>
      </list>
   </t>
  </section>

  <section title="DMARC Discovery Requirements"
           anchor="discovery_requirements">
   <t>Contributors to DMARC have also compiled a list of requirements that
      have informed the design of how DMARC policy is determined:

     <list style="numbers">
      <t>Simple to implement, especially for the feedback generator.</t>
      <t>Minimize DNS queries in the discovery phase.</t>
      <t>Resilient to abuse of the report consumer.  The ability of abusers to
         publish feedback addresses on wildcarded domains to create a lot of
         meaningless work for the generator is to be avoided. In recognition
         that DMARC can be used to perform "joe-job" attacks, the feedback
         destination URI should be within the same organizational domain.  If
         it is not, the feedback generators need to make a best-effort attempt
         not to joe-job the apparent feedback consumer.</t>
      <t>Support for multiple report consumers.  Multiple consumers should be
         able to receive feedback reports in parallel.</t>
      <t>Transport layer security as an option.</t>
      <t>Feedback generator verification.  Posting a URI in DNS
         to which anyone can upload large amounts of data is always
         dangerous.  The feedback consumer has to have a way to
         prevent denial of service attacks by dropping or blocking
         unwanted data.</t>
     </list></t>
  </section>

  <section title="Detailed Requirements">
   <t>DMARC's specification requirements, in detail:

      <list style="numbers">
       <t> The RFC5322.From domain is the identifier used for all message
           validation operations, as it is the single identifier in the message
           likely to be visible to the user. </t>
       <t> Senders can specify a "strict" or "relaxed" mode in terms
           of enforcing identifier checks (see
           <xref target="id_alignment_element"/>).  In "strict" mode,
           all identifiers from authentication systems upon which DMARC is
           predicated must match the RFC5322.From domain.  In "relaxed" mode,
           the organizational domains (see <xref target="terms_and_defs"/>)
           must match.  The "relaxed" mode shall be the default. </t>
       <t> A sender's policy must be discoverable via DNS queries. </t>
       <t> It must be possible to specify reject or quarantine policies when
           none of the underlying authentication systems succeed. </t>
       <t> It must be possible to specify a "no action" policy in order to
           collect authentication statistics without impacting delivery. </t>
       <t> Senders can specify a policy that is in effect for subdomains
           of its organizational domain that is different for the policy
           of the organizational domain itself. </t>
       <t> Message disposition requests via DMARC override those requested
           by any other public mechanism. </t>
       <t> Senders should be able to specify a percentage of their messages
           to which their policies should be applied, with the rest unaffected,
           in order to experiment and to understand and minimize deployment
           risk. </t>
       <t> Receivers should endeavour to reject or quarantine email if the
           RFC5322.From purports to be from a domain that appears to be either
           non-existent or incapable of receiving mail. </t>
       <t> Reporting configuration in DMARC should override any such options
           specified by DKIM or SPF or extensions to them. </t>
       <t> The sender must be able to to specify independent reporting
           addresses for failed message reporting and aggregate data
           feeds. </t>
       <t> The aggregate report must contain enough information for the report
           consumer to re-calculate DMARC disposition based on the published
           policy, message dispositon, and SPF, DKIM, and identifier alignment
           results. </t>
       <t> The aggregate report must still contain data for each sender
           subdomain separately from mail from the sender's organizational
           domain, even if no subdomain policy is applied.  The report must
           indicate any policy applied to subdomains. </t>
       <t> It must be possible to specify a minimum reporting interval.
           Reporting sites should make a best effort to accommodate that
           request. </t>
       <t> The sender can specify a time-to-live for policy records. </t>
       <t> The sender can indicate which domains under its control never
           send email, either by omitting them from the DNS entirely or
           by declaring specific use of DKIM and SPF that no email will
           ever fulfill. </t>
       <t> The sending and receiving domains should be included in the
           aggregate report. </t>
       <t> The policy request and the one applied (if different) should be
           included in the aggregate report. </t>
       <t> The number of successful authentications should be included in
           the aggregate report. </t>
       <t> The report should be generated based on all messages even if
           filtering agents such as anti-virus or anti-spam engines ultimately
           block delivery. </t>
       <t> For real-time reporting of failed messages, including a
           <xref target="URI"/> to identify phishing sites and diagnostics
           on DKIM and SPF failures will be recommended. </t>
       <t> Static conformance requirements shall be documented to enable
           testing programs to help ensure consitency of results.  (This
           will be done in a separate Best Current Practices document.) </t>
       <t> Aggregate reports should communicate DMARC message disposition
           regardless of any subsequent action that affects message
           disposition or delivery. </t>
       <t> The mechanism overall should be flexible enough to swap in or
           out any authentication technology. </t>
      </list> </t>

      <t> Tags throughout the specification part of this document indicate
          conformance to the above requirements.  For example "{R1}"
          indicates a component of the protocol that addresses requirement
          #1 in the list above. </t>
  </section>

  <section title="Out Of Scope">
   <t>Items specifically not in scope for this work include:
      <list style="symbols">
       <t> DMARC shall not be required to protect against any attacks against
           components listed in Security Dependencies (i.e. DNS attacks, bugs
           in DKIM verification, malware on the end-user machine or in the
           sender's system).  Compromised components at or near the sender
	   can cause false positives in terms of DKIM and SPF results;
	   while compromised components at the receiver can cause false
	   positives to be rendered to the user or interefere with the
           sender-requested actions. </t>
       <t> DMARC will not make a distinction between absence of DKIM signature
           and failed DKIM signature. </t>
       <t> DMARC (at least, the base version) will not provide the ability to
           publish a policy for message disposition results other than "all
           authentication tests failed". </t>
       <t> DMARC will not allow for use of header fields other than the
           RFC5322.From to perform identifier alignment checks. </t>
       <t> DMARC has no "short-circuit" provision, such as specifying that
           a pass from one authentication test allows one to skip the
           other(s).  All are required for reporting. </t>
       <t> This first version of DMARC supports only a single reporting
           format. </t>
       <t> DMARC makes no attempt to accommodate discovery of policy outside
           of the DNS.  Such policy communications may be accomplished
           out-of-band, but not within the mechanisms described here. </t>
       <t> DMARC provides no advice about handling of malformed messages
           that might seek to exploit message processing weaknesses.  There
           are other specifications and operational documents that cover
           these issues. </t>
       <t> DMARC reports only on the last-hop IP address, and does not
           provide for reporting of the originating IP. </t>
       <t> DMARC does not address attacks that provide false information
           in the "display name" portion of the RFC5322.From field. </t>
      </list>
   </t>
  </section>
 </section>

 <section title="Terminology and Definitions" anchor="terms_and_defs">
  <t>This section defines terms used in the rest of the document.</t>

  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
     "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
     document are to be interpreted as described in
     <xref target="KEYWORDS"/>.</t>

  <t>For the purpose of establishing context, readers are encouraged
     to be familiar with the contents of <xref target="EMAIL-ARCH"/>. 
     In particular, that document defines various roles in the messaging
     infrastructure that can appear the same or separate in various
     contexts.  For example, a Domain Owner could, via the messaging
     security mechanisms on which DMARC is based, delegate the ability to
     send mail as the Domain Owner to some third party.  This memo does
     not address the distinctions among such roles; the reader is encouraged
     to become familiar with that material before continuing. </t>

  <t>The following terms are also used:
     <list style="hanging">
      <t hangText="Authenticated Identifiers:"> Authentication technologies
       allow evaluation agents to associate email with domain-level
       identifiers.  Domain-level identifiers that are established using
       authentication technologies are referred to as "Authenticated
       Identifiers".  See <xref target="auth_mechs"/> for details about the
       supported mechanisms. </t>

      <t hangText="Cousin Domain:"> A DNS domain that, when rendered by a
       Mail User Agent (MUA), looks similar to, or can lead users to believe
       the domain is associated with, another name.  For instance,
       "vendor5.example" would be a Cousin Domain of "vendors.example".
       This is a common tool in a homograph attack. </t>

      <t hangText="Domain Owner:"> The entity or organization that
       "owns" a DNS domain.  The term "owns" here indicates that the
       entity or organization being referenced holds the registration
       of that DNS domain.  Entities that are Domain Owners range from
       complex, globally-distributed organizations, to service providers
       working on behalf of non-technical clients, to individuals responsible
       for maintaining personal domains.  This specification uses this
       term as analogous to an Administrative Management Domain as defined
       in <xref target="EMAIL-ARCH"/>. </t>

      <t hangText="Mail Receiver:"> The entity or organization that
       receives and processes email.  Mail Receivers operate one or more
       Internet-facing Mail Transport Agents (MTAs).</t>

      <t hangText="Organizational Domain:"> For the purposes of this
       document, an Organizational Domain is the domain that was registered
       with a domain name registrar.  Heuristics are used to determine this
       given an arbitrary domain name, since it is not always the case that
       the registered domain name is simply a top-level DNS domain plus one
       component (e.g., "example.com", where "com" is a top-level domain).
       The Organizational Domain is determined by applying the
       following algorithm:

       <list style="numbers">
        <t> Acquire a "public suffix" list, i.e., a list of DNS domain
            names reserved for registrations.  Some country TLDs
            make specific registration requirements, e.g. the United Kingdom
            places company registrations under ".co.uk"; other TLDs
            such as ".com" appear in the IANA registry of top-level DNS
            domains.  A public suffix list is the union of all of
            these.  <xref target="suffixes"/> contains some discussion
            about obtaining a public suffix list. </t>

        <t> Break the subject DNS domain name into a set of "n" ordered
            labels.  Number these labels from right-to-left; e.g. for
            "example.com", "com" would be label 1 and "example" would be
            label 2. </t>

        <t> Search the public suffix list for the name that matches the
            largest number of labels found in the subject DNS domain.
            Let that number be "x". </t>

        <t> Construct a new DNS domain name using the name that matched
            from the public suffix list and prefixing to it the "x+1"th
            label from the subject domain.  This new name is the
            Organizational Domain. </t>
       </list>

       Thus, since "com" is an IANA-registered TLD, a subject domain of
       "a.b.c.d.example.com" would have an Organizational Domain of
       "example.com".</t>

       <t> The process of determining a suffix is currently a heuristic
           one.  No list is guaranteed to be accurate or current. </t>
     </list>
  </t>

  <section title="Authentication Mechanisms" anchor="auth_mechs">
   <t> The following Authenticated Identifiers are supported in the current
       version of DMARC:

       <list style="symbols">
        <t> <xref target="DKIM"/>, which provides a domain-level identifier in
            the content of the "d=" tag of a validated signature. </t>
        <t> <xref target="SPF"/>, which can authenticate the domain found
            in an <xref target="SMTP"/> MAIL command. </t>
       </list> </t>
  </section> <!-- Authentication Mechanisms -->

  <section title="Summary" anchor="summary">
   <t>DMARC's filtering component is based on whether or not SPF or DKIM
      can provide an authenticated -- and relevant -- identifier for any given
      message.  Messages that purport to be from a Domain Owner's domain and
      arrive from servers that are not authorized by SPF and do not contain an
      appropriate DKIM signature can be affected by DMARC policies.</t>

   <t>DMARC's feedback component involves the collection of information
      pertaining to received messages, in the aggregate, for periodic
      reporting back to the Domain Owner.  The parameters and format for such
      reports are discussed in later sections of this document.</t>

   <t>A DMARC-enabled Mail Receiver might also generate per-message reports
      that contain information related to individual messages which fail SPF
      and/or DKIM.  Per-message reports are useful for forensic use in
      debugging deployments (if messages can be determined to be legitimate
      albeit failing authentication) or in analyzing attacks. The capability
      for such services is enabled by DMARC but defined in other referenced
      material.</t>

   <t>It is important to note that the authentication mechanisms employed
      by DMARC authenticate only a DNS domain, and do not authenticate the
      local-part of any email address identifier found in a message.</t>
  </section>

  <section title="Identifier Alignment" anchor="id_alignment_element">
   <t>Email authentication technologies authenticate various (and disparate)
      aspects of an individual message.  For example, <xref target="DKIM"/>
      authenticates the domain that affixed a signature to the message, while
      <xref target="SPF"/> authenticates the domain that appears in the
      RFC5321.MailFrom portion of <xref target="SMTP"/>.  The DMARC mechanism
      introduces the concept of Identifier Alignment to address the possible
      discrepancy of Authenticated Identifiers supplied by underlying
      authentication technologies.</t>

   <t>DMARC uses the RFC5322.From domain to tie together Authenticated
      Identifiers {R1}.  The selection of the RFC5322.From domain as the
      central identity of the DMARC mechanism is due to the ubiquity of this
      identity and the behavior of most MUAs to represent the RFC5322.From
      field as the originator of the message and to render some or all of this
      header's content to end users.</t>

   <t>To be considered "in alignment" for the purposes of the DMARC
      mechanism, implementors MUST observe the considerations described
      in the following sections.  Domain names in this context are to
      be compared in a case-insensitive manner, per
      <xref target="DNS-CASE"/>.  </t>

   <section title="DKIM-authenticated Identifiers" anchor="dkim_id_align">
    <t>DMARC provides the option of applying DKIM in a strict mode or a
       relaxed mode {R2}. </t>

    <t>In relaxed mode, the Organizational Domain of the
       <xref target="DKIM"/>-authenticated signing domain (taken from the
       value of the "d=" tag in the signature) and that of the RFC5322.From
       domain must be equal.  In strict mode, only an exact match is
       considered to produce identifier alignment. </t>

    <t>To illustrate, in relaxed mode, if a validated DKIM signature
       successfully verifies with a "d=" domain of "example.com", and the
       RFC5322.From domain is "alerts@news.example.com", the DKIM "d=" domain
       and the RFC5322.From domain are considered to be "in alignment".  In
       strict mode, this test would fail.</t>

    <t>However, a DKIM signature bearing a value of "d=com" would never allow
       an "in alignment" result as "com" should appear on all public suffix
       lists, and therefore cannot be an Organizational Domain.</t>

    <t>Identifier alignment is required to prevent abuse by phishers that
       send DKIM-signed email using an arbitrary "d=" domain (such as
       a Cousin Domain) to pass authentication checks.</t>

    <t>Note that a single email can contain multiple DKIM signatures, raising
       the possibility of processing multiple signatures in an attempt
       to establish an "in alignment" result.</t>
   </section> <!-- DKIM Identifiers -->

   <section title="SPF-authenticated Identifiers" anchor="spf_id_align">
    <t>DMARC provides the option of applying SPF in a strict mode or a
       relaxed mode {R2}. </t>

    <t>In relaxed mode, the <xref target="SPF"/>-authenticated
       RFC5321.MailFrom (commonly called the "envelope sender") domain and
       RFC5322.From domain must have the same Organizational Domain.
       In strict mode, only an exact DNS domain match is considered to produce
       identifier alignment.</t>

    <t>For example, if a message passes an SPF check with an
       RFC5321.MailFrom domain of "cbg.bounces.example.com", and the
       address portion of the RFC5322.From field contains
       "payments@example.com", the Authenticated RFC5321.MailFrom domain
       identifier and the RFC5322.From domain are considered to be "in
       alignment" in relaxed mode, but not in strict mode.</t>
   </section> <!-- SPF Identifiers -->

   <section title="Alignment and Extension Technologies" anchor="ext_id_align">
    <t> If DMARC is extended to include the use of other authentication
        mechanisms, the extensions will need to allow for domain identifier
        extraction so that alignment against the RFC5322.From domain can be
        verified.</t>
   </section> <!-- Alignment and Extension Technologies -->
  </section> <!-- Identifier Alignment -->
 </section> <!-- Definitions -->

 <section title="Policy" anchor="policy_element">
  <t> DMARC policies are published by Domain Owners and applied by Mail
      Receivers. </t>

  <t> A Domain Owner advertises DMARC participation by adding a DNS TXT record
      (described in Section 6) {R3, R15, R16} to one or more sending domains
      under its direct or indirect control (e.g. operated by a delegate by
      agreement with the Domain Owner).  In doing so, senders make specific
      requests of Mail Receivers regarding the disposition of, and feedback
      on, messages purporting to be from one of the Domain Owner's
      domains. </t>

  <t> A Mail Receiver MUST consider an arriving message to pass the DMARC
      test if and only if one or more of the underlying message authentication
      mechanisms pass with proper identifier alignment. </t>

  <t> A Domain Owner that does not advertise an SPF policy or sign with DKIM
      is making an implicit statement that the use cases those protocols
      satisfy are not to be considered when determining whether or
      not the message under evaluation is valid.  For example, not publishing
      an SPF policy is an implicit message from Domain Owners to Mail
      Receivers that successful path authorization is not to be taken as
      sufficient evidence that the Domain Owner authorized the message. </t>

  <t> A Mail Receiver implementing the DMARC mechanism MUST make a best-effort
      to adhere to the Domain Owner's published DMARC policy when a message
      fails the DMARC test.  Recognizing that email streams can be
      complicated (due to forwarding, existing RFC5322.From domain-spoofing
      services, etc.), Mail Receivers MAY deviate from a Domain Owner's
      published policy during message processing and SHOULD make available
      the fact and reason of the deviation to the Domain Owner via feedback
      reporting. </t>
 </section> <!-- Policy -->

 <section title="DMARC Policy Record" anchor="dmarc_record">
  <t> Domain Owner DMARC preferences are stored as DNS TXT records in
      subdomains named "_dmarc".  For example, the Domain Owner of
      "example.com" would post DMARC preferences in a TXT record at
      "_dmarc.example.com".  Similarly, a Mail Receiver wishing to query for
      DMARC preferences regarding mail with an RFC5322.From domain of
      "example.com" would issue a TXT query to the DNS for the subdomain of
      "_dmarc.example.com".  The DNS-located DMARC preference data will
      hereafter be called the "DMARC record". </t>

  <t> DMARC records are stored in the DNS for three key engineering
      reasons:

      <list style="hanging">
       <t hangText="Overrides:"> DMARC records published at child domains
           explicitly override extant parent policy. </t>
       <t hangText="Efficiency:"> DNS caching is a common practice,
           reducing operational overhead of a new DNS-based mechanism. </t>
      </list> </t>

  <t> Per <xref target="DNS"/>, a TXT record can comprise several
      "character-string" objects.  Where this is the case, the module
      performing DMARC evaluation MUST concatenate these strings by
      joining together the objects in order and parsing the result
      as a single string. </t>

   <section anchor="dmarc_uris" title="DMARC URIs">
    <t> <xref target="URI"/> defines a generic syntax for identifying
        a resource.  The DMARC mechanism uses this as the format by which
        a Domain Owner specifies the destination for the two
        report types that are supported. </t>

    <t> The place such URIs are specified (see <xref target="dmarc_format"/>)
        allows a list of these to be provided.  A report is to be sent to
        each listed URI.  Mail Receivers MAY impose a limit on the number of
        URIs that receive reports, but MUST support at least two.
        The list of URIs is separated by commas (ASCII 0x2C). </t>

    <t> Each URI can have associated with it a maximum report size that may
        be sent to it.  This is accomplished by appending an exclamation
	point (ASCII 0x21), followed by a maximum size indication, before
 	a separating comma or terminating semi-colon. </t>

    <t> Thus, a DMARC URI is a URI within which any commas or exclamation
        points are percent-encoded per <xref target="URI"/>, followed
        by an OPTIONAL exclamation point and a maximum size specification,
        and, if there are additional reporting URIs in the list, a comma and
        the next URI. </t>

    <t> For example, the URI "mailto:reports@example.com!50m" would request
        a report be sent via email to "reports@example.com" so long as the
        report payload does not exceed 50 megabytes. </t>

    <t> A formal definition is provided in <xref target="dmarc_abnf"/>. </t>
   </section>

   <section anchor="dmarc_format" title="General Record Format">
    <t> DMARC records follow the extensible "tag-value" syntax for DNS-based
        key records defined in <xref target="DKIM"/>. {R24} </t>

    <t> <xref target="iana_considerations"/> creates a registry for
        known DMARC tags and registers the initial set defined in this
        memo.  Only tags defined in this memo or in later extensions, and
        thus added to that registry, are to be processed; unknown tags MUST
        be ignored.  To avoid version compatibility issues, tags added to
        the DMARC specification SHOULD NOT change the semantics of existing
        records when processed by implementations conforming to prior
        specifications.</t>

    <t> The following tags are introduced as the initial valid DMARC tags:
        <list style="hanging">

        <t hangText="adkim:"> (plain-text; OPTIONAL, default is "r".)
           Indicates whether or not strict DKIM identifier alignment is required
	   by the Domain Owner.  If and only if the value of the string is "s", 
           strict mode is in use.  See <xref target="dkim_id_align"/> for
           details. </t>

        <t hangText="aspf:"> (plain-text; OPTIONAL, default is "r".)
           Indicates whether or not strict SPF identifier alignment is required
	   by the Domain Owner.  If and only if the value of the string is "s", 
           strict mode is in use.  See <xref target="spf_id_align"/> for
           details. </t>

         <t hangText="p:"> Requested Mail Receiver policy (plain-text;
          REQUIRED).  Indicates the policy to be enacted by the Receiver at
          the request of the Domain Owner.  Policy applies to the domain
          queried and to sub-domains unless sub-domain policy is explicitly
          described using the "sp" tag.  Possible values are as follows:

         <list style="hanging">
          <t hangText="none:"> {R5} The Domain Owner requests no specific
           action be taken regarding delivery of messages. </t>

          <t hangText="quarantine:"> {R4} The Domain Owner wishes to have
           email that fails the DMARC mechanism check to be treated by
           Mail Receivers as suspicious.  Depending on the capabilities
           of the Mail Receiver, this can mean "place into spam folder",
           "scrutinize with additional intensity", and/or "flag as
           suspicious". </t>

          <t hangText="reject:"> {R4} The Domain Owner wishes for Mail
           Receivers to reject email that fails the DMARC mechanism check.
           Rejection SHOULD occur during the SMTP transaction.  
           See <xref target="sec_rejection"/> for some discussion of
           SMTP rejection methods and their implications. </t>
         </list> </t>

        <t hangText="pct:"> (plain-text integer between 0 and 100, inclusive;
	   OPTIONAL;
           default is 100).  {R8} Percentage of messages from the DNS domain's
           mail stream to which the DMARC mechanism is to be applied.  However,
           this MUST NOT be applied to the DMARC-generated reports, all of
           which must be sent and received unhindered.  The purpose of the
           "pct" tag is to allow Domain Owners to slowly roll out enforcement
           of the DMARC mechanism.  The prospect of "all or nothing" is
           recognized as preventing many organizations from experimenting with
           strong authentication-based mechanisms.</t>

        <t hangText="rf:"> Format to be used for message-specific
           forensic information reports (comma-separated plain-text list of
	   values; OPTIONAL; default "afrf").  The value of this tag is a list
           of one or more report formats as requested by the Domain Owner to
           be used when a message fails both <xref target="SPF"/> and
           <xref target="DKIM"/> tests to report details of the individual
           failure.  The values MUST be present in the registry of reporting
           formats defined in <xref target="iana_considerations"/>; a Mail
           Receiver observing a different value SHOULD ignore it, or MAY
           ignore the entire DMARC record.  Initial default values are
           "afrf" (defined in <xref target="AFRF"/>) and
           "iodef" (defined in <xref target="IODEF"/>). </t>

        <t hangText="ri:"> Interval requested between aggregate reports
           (plain-text, 32-bit unsigned integer; OPTIONAL; default 86400).
	   {R14} Indicates
           a request to Receivers to generate aggregate reports separated
           by no more than the requested number of seconds.  DMARC
           implementations MUST be able to provide daily reports and SHOULD
           be able to provide hourly reports when requested.  However,
           anything other than a daily report is understood to be accommodated
           on a best-effort basis. </t>

        <t hangText="rua:"> Addresses to which aggregate feedback
           is to be sent (comma-separated plain-text list of DMARC URIs;
	   OPTIONAL).  {R11}
           A comma or exclamation point that is part of such a DMARC URI
	   MUST be encoded per Section 2.1 of <xref target="URI"/> so as
	   to distinguish it from the list delimiter or an OPTIONAL size
	   limit.  <xref target="fb_verify"/> discusses considerations that
 	   apply when the domain name of a URI differs from that of the
	   domain advertising the policy.  See <xref target="sec_external"/>
	   for additional considerations.  Any valid URI can be specified.
	   A Mail Receiver MUST implement support for
           a "mailto:" URI, i.e. the ability to send a DMARC report via
           electronic mail.  If not provided, Mail Receivers MUST NOT
           generate aggregate feedback reports.  URIs not supported by
           Mail Receivers MUST be ignored.  The aggregate feedback report
	   format is described in <xref target="fb_aggregate"/>. </t>

        <t hangText="ruf:"> Addresses to which message-specific forensic
           information is to be reported (comma-separated plain-text list of
           DMARC URIs; OPTIONAL).  {R11} If present, the Domain Owner is
	   requesting Mail Receivers to send detailed forensic reports about
	   messages that fail <xref target="SPF"/> and/or <xref target="DKIM"/>
           evaluation.  The format of the message to be generated MUST follow
           that specified in the "rf" tag.  <xref target="fb_verify"/>
	   discusses considerations that apply when the domain name of a URI
	   differs from that of the domain advertising the policy. 
	   A Mail Receiver MUST implement support for a "mailto:" URI, i.e.
	   the ability to send a DMARC report via electronic mail.  If not
	   provided, Mail Receivers MUST NOT generate forensic reports.
	   See <xref target="sec_external"/> for additional
	   considerations.  </t>

         <t hangText="sp:"> {R6} Requested Mail Receiver policy for subdomains
           (plain-text; OPTIONAL).  Indicates the policy to be enacted by the
           Receiver at the request of the Domain Owner.  It applies only to
           subdomains of the domain queried and not to the domain itself. Its
           syntax is identical to that of the "p" tag defined above. If
           absent, the policy specified by the "p" tag MUST be applied for
           subdomains.  </t>

        <t hangText="v:"> Version (plain-text; REQUIRED).
           Identifies the record retrieved as a DMARC record.  It MUST
           have the value of "DMARC1".  The value of this tag MUST match
           precisely; if it does not or it is absent, the entire
           retrieved record MUST be ignored.  It MUST be the first tag in
	   the list. </t>
      </list> </t>

    <t> Note that addition of a new tag into the registered list of tags
        does not itself require a new version of DMARC to be generated
        (with a corresponding change to the "v" tag's value), but a change
        to any existing tags does require a new version of DMARC. </t>
   </section> <!-- General Record Format -->

   <section anchor="dmarc_abnf" title="Formal Definition">
    <t> The formal definition of the DMARC format using <xref target="ABNF"/>
        is as follows: </t>

        <figure><artwork>
  dmarc-uri = URI [ "!" 1*DIGIT [ "k" / "m" / "g" / "t" ] ]
            ; "URI" is imported from [URI]; commas (ASCII 0x2c)
            ; and exclamation points (ASCII 0x21) MUST be encoded

  dmarc-record = dmarc-version dmarc-sep
                 dmarc-request
                 [dmarc-sep dmarc-srequest]
                 [dmarc-sep dmarc-auri]
                 [dmarc-sep dmarc-furi]
                 [dmarc-sep dmarc-adkim]
                 [dmarc-sep dmarc-aspf]
                 [dmarc-sep dmarc-ainterval]
                 [dmarc-sep dmarc-rfmt]
                 [dmarc-sep dmarc-percent]
                 ; components other than dmarc-version and
                 ; dmarc-request may appear in any order

  dmarc-sep = *WSP %3b *WSP

  dmarc-version = %x76 *WSP "=" %x44.4d.41.52.43

  dmarc-request = %x70 *WSP "=" *WSP ( "none" / 
                                       "quarantine" / "reject" )

  dmarc-srequest = %x73.70 *WSP "=" *WSP ( "none" / 
                                           "quarantine" / "reject" )

  dmarc-auri = %x72.75.61 *WSP "=" *WSP
                dmarc-uri *(*WSP "," *WSP dmarc-uri)

  dmarc-ainterval = %x72.69 *WSP "=" *WSP

  dmarc-furi = %x72.75.66 *WSP "=" *WSP
                dmarc-uri *(*WSP "," *WSP dmarc-uri)

  dmarc-rfmt = %x72.66 *WSP "=" *WSP
               ( "afrf" / "iodef" )

  dmarc-percent = %x70.63.74 *WSP "=" *WSP
                  1*3DIGIT

  dmarc-adkim = %x61.64.6b.69.6d  *WSP "=" *WSP
                ( "r" / "s" )

  dmarc-aspf = %x61.73.70.66  *WSP "=" *WSP
               ( "r" / "s" )
        </artwork></figure>

   <t> A size limitation in a dmarc-uri, if provided, is interpreted as a count
       of units followed by an OPTIONAL unit size ("k" for kilobytes, "m"
       for megabytes, "g" for gigabytes, "t" for terabytes).  Without a unit,
       the number is presumed to be a basic byte count.  Note that
       the units are considered to be powers of two; a kilobyte is 2^10,
       a megabyte is 2^20, etc. </t>
  </section> <!-- Formal Definition -->
 </section> <!-- DMARC Policy Record -->

 <section title="Policy Enforcement Considerations"
          anchor="enforcement_policy_element">
  <t> Mail Receivers MAY choose to reject or quarantine email
      even if email passes the DMARC mechanism check.  The DMARC
      mechanism does not inform Mail Receivers whether an email stream is
      "good".  Mail Receivers are encouraged to maintain anti-abuse
      technologies to combat the possibility of DMARC-enabled criminal
      campaigns.</t>

  <t> Mail Receivers MAY choose to accept email that fails
      the DMARC mechanism check even if the Domain Owner has
      published a "reject" policy.  Mail Receivers SHOULD make a
      best effort not to increase the likelihood of phishing if
      it chooses not to reject, against policy.  At a minimum, addition
      of the Authentication-Results header field (see <xref target="AUTHRES"/>)
      is RECOMMENDED when delivery of failing mail is done.  When this
      is done, the DNS domain name thus recorded MUST be encoded as
      an A-label, as described in Section 2.3 of <xref target="IDNA"/>. </t>

  <t> Mail Receivers are not obligated to report reject or quarantine policy
      actions in aggregate feedback reports that are not due to DMARC policy,
      but are instead the result of local policy.  If local policy information
      is exposed, abusers can gain insight into the effectiveness and delivery
      rates of spam campaigns.</t>

  <t> DMARC-compliant Mail Receivers SHOULD disregard any mail directive
      discovered as part of an authentication mechanism (e.g., ADSP, SPF)
      where a DMARC policy is also discovered that specifies a policy
      other than "none". {R7}  To enable Domain Owners to receive DMARC
      feedback without impacting existing mail processing, discovered
      policies of "p=none" SHOULD NOT modify existing mail disposition
      processing.  Note that some Mail Receivers may reject email based
      upon SPF policy mechanisms before email enters DMARC-specific
      processing. </t>

  <t> Mail Receivers SHOULD also implement reporting instructions of
      DMARC in place of any extensions to SPF or DKIM that might enable
      such reporting. {R10} </t>
 </section> <!-- Policy Enforcement -->

 <section title="DMARC Feedback" anchor="feedback">
  <t> The DMARC mechanism requires highly accurate authentication deployments
      to allow Mail Receivers to safely and scalably enforce Domain Owner
      policies.  Providing Domain Owners with visibility into how Mail
      Receivers implement and enforce the DMARC mechanism in the form of
      feedback is critical to establishing and maintaining accurate
      authentication deployments. </t>

  <section title="Feedback Considerations" anchor="fb_consid">
   <t> It is advisable for a site generating reports of either aggregate
       traffic or specific incidents to ensure the validity and safe practices
       of the entity that will receive the reports.  Some documents that
       provide guidance for such work are <xref target="ARF"/>,
       <xref target="ARF-BCP"/> and <xref target="ARF-AS"/>. </t>
  </section> <!-- Feedback Considerations -->

  <section title="Verifying External Destinations" anchor="fb_verify">
   <t> It is possible to specify destinations for the different reports
       that are outside the domain making the request.  This is enabled
       to allow domains that do not have mail servers to request reports
       and have them go someplace that is able to receive and process
       them. </t>

   <t> Without checks, this would allow a bad actor to publish a DMARC policy
       record that requests reports be sent to a victim address, and then
       send a large volume of mail that will fail both DKIM and SPF checks
       to a wide variety of destinations, which will in turn flood the
       victim with unwanted reports.  Therefore, a verification mechanism
       is included. </t>

   <t> When a Mail Receiver discovers a DMARC policy in the DNS, and the domain
       at which that record was discovered is not identical to the host
       part of the authority component of a <xref target="URI"/> specified
       in the "rua" or "ruf" tag, the following verification steps SHOULD
       be taken:

	<list style="numbers">
		<t> Extract the host portion of the authority component of
		    the URI.  Call this the "destination host". </t>

		<t> Prepend the string "_report._dmarc". </t>

		<t> Prepend the domain name from which the policy was
		    retrieved. </t>

		<t> Query the DNS for a TXT record at the constructed name.
		    If the result of this request is a temporary DNS
		    error of some kind (e.g., a timeout), the Mail
		    Receiver MAY elect to temporarily fail the delivery
		    so the verification test can be repeated later. </t>

		<t> If the result includes no TXT resource records or
		    multiple TXT resource records, a positive determination
		    of the external reporting relationship cannot be made;
		    stop. </t>

		<t> Parse the result, if any, as a series of "tag=value"
		    pairs, i.e., the same overall format as the policy
		    record.  In particular, the "v=DMARC1" tag is
		    mandatory and MUST appear first in the list.  If at least
		    that tag is present and the
		    record overall is syntactically valid per
		    <xref target="dmarc_abnf"/>, then the external reporting
		    arrangement was authorized by the destination ADMD. </t>

		<t> If a "rua" or "ruf" tag is thus discovered, replace the
		    corresponding value extracted from the domain's DMARC
		    policy record with the one found in this record.  This
		    permits the report receiver to override the report
		    destination.  However, to prevent loops or indirect abuse,
		    the overriding URI MUST use the same destination host from
		    the first step. </t>
	</list> </t>

   <t> For example, if a DMARC policy query for "blue.example.com" contained
       "rua=mailto:reports@red.example.net", the host extracted from the
       latter ("red.example.net") does not match "blue.example.com", so this
       procedure is enacted.  A TXT query for
       "blue.example.com._report._dmarc.red.example.net" is issued.  If
       a single reply comes back containing a tag of "v=DMARC1", then the
       relationship between the two is confirmed.  Moreover, red.example.net
       has the opportunity to override the report destination requested by
       "blue.example.com" if needed. </t>

   <t> Where the above algorithm fails to confirm that the external reporting
       was authorized by the destination domain, the URI MUST be ignored
       by the Mail Receiver generating the report.  Further, if the confirming
       record includes a URI whose host is again different than the
       domain publishing that override, the Mail Receiver generating the
       report MUST NOT generate a report to either the original or the
       override URI. </t>

   <t> A report receiver MUST publish such a record in its DNS if it wishes
       to receive reports for other domains. </t>

   <t> The ADMD confirming via the DNS that it wishes to receive reports
       can use a wildcard DNS record to confirm that it is willing to receive
       reports for any domain.  For example, a TXT resource record at
       "*._report._dmarc.example.com" containing at least "v=DMARC1" confirms
       that example.com is willing to receive DMARC reports for any
       domain. </t>

   <t> If the destination of the reports is overcome by volume, it can
       simply remove the confirming DNS record.  However, due to positive
       caching, the result could take as long as the time-to-live on the
       record to go into effect. </t>

   <t> A Mail Receiver might decide not to enact this procedure if, for
       example, it relies on a local list of domains for which external
       reporting addresses are permitted. </t>
  </section> <!-- Verifying External Destinations -->

  <section title="Aggregate Reports" anchor="fb_aggregate">
   <t> Visibility comes in the form of daily (or more frequent)
       Mail Receiver-originated feedback reports that contain
       aggregate data on message streams relevant to the Domain Owner.
       This information includes data about messages that passed
       DMARC authentication as well as those that did not. </t>

   <t> The format for these reports is defined in
       <xref target="xml_schema"/>. </t>

   <t> The report SHOULD include the following data:
	<list style="symbols">
		<t> Enough information for the report consumer to
		    re-calculate DMARC disposition based on the
		    published policy, message dispositon, and SPF, DKIM, and
		    identifier alignment results. {R12} </t>
		<t> Data for each sender subdomain separately from mail from
		    the sender's organizational domain, even if no subdomain
		    policy is applied.  {R13} </t>
		<t> Sending and receiving domains {R17} </t>
		<t> The policy requested by the Domain Owner and the policy
		    actually applied (if different) {R18} </t>
		<t> The number of successful authentications {R19} </t>
		<t> The counts of messages based on all messages received
		    even if their delivery is ultimately blocked by other
		    filtering agents {R20} </t>
	</list> </t>
  </section> <!-- Aggregate Reports -->

  <section title="Forensic Reports" anchor="forensic">
   <t> When a Domain Owner requests forensic reports on failures, and the
       Mail Receiver is willing to provide such reports, the Mail Receiver
       generates and sends a message using the format described in
       <xref target="AFRF"/>. </t>

   <t> An obvious consideration is the denial of service attack that can be
       perpetrated by an attacker who sends numerous messages purporting to
       be from the intended victim Domain Owner but which fail both SPF and
       DKIM; this would cause participating Mail Receivers to send forensic
       reports to the Domain Owner or its delegate in potentially huge
       volumes.  Accordingly, participating Mail Receivers are encouraged to
       aggregate these reports as much as is practical, using the Incidents
       field of the Abuse Reporting Format (<xref target="ARF"/>).  Various
       aggregation techniques are possible, including:

       <list style="symbols>
	<t> only send a report to the first recipient of multi-recipient
	    messages; </t>

	<t> store reports for a period of time before sending them,
	    allowing detection, collection, and reporting of like
	    incidents; </t>

	<t> apply rate limiting, such as a maximum number of reports per
	    minute that will be generated (and the remainder discarded). </t>
       </list> </t>
  </section> <!-- Forensic Reports -->

  <section title="Failure Reports" anchor="fb_failure">
   <t> Message-specific authentication-failure-related forensic reporting can
       be used to identify problems with Domain-Owner-controlled
       infrastructure and to investigate the sources and causes of failing
       messages.  They might also be used to aid investigations into the
       sources and objectives of fraudulent messages. </t>

   <t> The format for these reports is defined in either
       <xref target="AFRF"/> or <xref target="IODEF"/> depending on the
       value found in the "rf" tag of the DMARC record (or its default). </t>

   <t> These reports SHOULD include the "call-to-action" URI(s) from inside
       messages that failed to authenticate. {R21} </t>
  </section> <!-- Failure Feedback -->
 </section> <!-- DMARC Feedback -->
    
 <section title="Policy Discovery" anchor="policy_discovery">
  <t> As stated above, the DMARC mechanism utilizes DNS TXT records
      to advertise policy.  Policy discovery is accomplished similar to
      the way SPF records are discovered.  Important differences are
      discussed below.</t>

  <t> To balance the conflicting requirements of supporting wildcarding,
      subdomain policy overrides, and limiting DNS query load, the following
      DNS lookup scheme is employed:

      <list style="numbers">
        <t> Mail Receivers MUST query the DNS for a DMARC TXT record at
            the DNS domain matching the one found in the RFC5322.From domain
            in the message.  A possibly empty set of records is returned. </t>

        <t> Records that do not start with a "v=" tag that identifies
            the current version of DMARC are discarded. </t>

        <t> If the set is now empty, the Mail Receiver
            MUST query the DNS for a DMARC TXT record at the DNS domain
            matching the Organizational Domain in place of the RFC5322.From
            domain in the message (if different).  This record can contain
	    policy to be asserted for subdomains of the Organizational
	    Domain. </t>

        <t> Records that do not include a "v=" tag that identifies
            the current version of DMARC are discarded. </t>

	<t> If the remaining set contains multiple records, processing
	    terminates and the Mail Receiver takes no action. </t>

        <t> If a retrieved policy record does not contain a valid "p" tag, 
            or contains an "sp" tag that is not valid, then:

            <list style="letters">
	 	<t> if an "rua" tag is present and contains at least one
		    syntactically valid reporting URI, the Mail Receiver
		    SHOULD act as if a record containing a valid "v" tag
		    and "p=none" was retrieved, and continue processing; </t>
		<t> otherwise, the Mail Receiver SHOULD take no action. </t>
	    </list> </t>
      </list> </t>

  <t> If the set produced by the mechanism above contains
      no DMARC policy record (i.e., any indication that there is no such
      record as opposed to a transient DNS error), Mail Receivers SHOULD
      NOT apply the DMARC mechanism to the message. </t>

  <t> If the RFC5322.From domain does not exist in the DNS, Mail Receivers
      SHOULD direct the receiving SMTP server to reject the message {R9}. The
      choice of mechanism for such rejection and the implications of those
      choices are discussed in <xref target="mail_receiver_actions"/> and
      <xref target="sec_rejection"/>. </t>
 </section> <!-- Policy Discovery -->

 <section title="Domain Owner Actions"
          anchor="domain_owner_actions">
  <t>To implement the DMARC mechanism, Domain Owners perform the
     actions enumerated in this section.  For a trial operation, a Domain
     Owner might at first deploy DMARC to cover only a subdomain.

     <list style="numbers">
      <t> Deploy authentication technologies <xref target="DKIM"/>
          (see also <xref target="DKIM-OVERVIEW"/> and
          <xref target="DKIM-DEPLOYMENT"/>) and <xref target="SPF"/>. </t>

      <t> Align identifiers; i.e., audit internal systems so that mail
          received by external Mail Receivers will observe that
          Authenticated Identifiers within such messages will be in
          alignment according to the alignment mode to be used.  It is
          important to be thorough with this step, considering all
          possible use cases of mail outbound from the ADMD, as failing
          to align identifiers correctly can cause undesirable handling
          by participating Mail Receivers.  For example, the possibility
          of mail to mailing lists, and the side effects of mailing
          lists, needs to be considered. </t>

      <t> Prepare to receive feedback.  Create dedicated email addresses
          to receive and process feedback from the Mail Receivers. This
          reporting address SHOULD be serviced by an MTA equipped to perform
          both DKIM and SPF checks. </t>

      <t> Publish a DMARC policy of "none" with a feedback reporting
          address to receive aggregate feedback data from Mail Receivers. </t>

      <t> Review and tune authentication deployments.  Use the provided
          feedback data to remediate unauthenticated email streams and correct
          identifier alignment issues.  This is a good opportunity to discover
          email that, for example, passes SPF checks but is missing DKIM
          signatures, since such email will inevitably fail authentication
          when forwarded.</t>

      <t> Increase policy strength.  When confidence of authentication
          accuracy is gained, publish a DMARC policy of "quarantine" with
          a reasonably small value for "pct".  Debug false positives (due to
          missed unsigned mailstreams) while gradually increasing the value
          of "pct" to 100.</t>

      <t> Fully secure mail streams.  When "pct" reaches 100 with no
          observed ill effects, publish a DMARC policy of "reject"
          with a reasonably small value for "pct".  Repeat debugging
          and corrective process as necessary.</t>
     </list></t>

    <t>Many URI schemes involve direct connections to the specified service
       (e.g., http, ftp), but some involve the possibility of intermediate
       handling (e.g. mailto).  A report generator will therefore be able
       to tell right away if submission of a report to the former type of
       service has succeeded or whether an alternate (if available) needs to
       be attempted, but this will not be immediately obvious for the latter
       type of service.  For example, a report submitted by mail may succeed
       at least as far as the local MTA, but could bounce later; however, a
       DMARC report generator will not immediately know about this downstream
       error. </t>

    <t>Therefore, Domain Owners SHOULD include "mailto" URIs at the end of
       the lists of URIs they publish. </t>
 </section> <!-- Domain Owner Actions -->

 <section title="Mail Receiver Actions" anchor="mail_receiver_actions">
  <t>This section describes receiver actions in the DMARC environment. </t>

  <section title="Extract Author Domain" anchor="receiver_domain">
   <t>The domain in the RFC5322.From field is extracted as the domain
      to be evaluated by DMARC. </t>

   <t>A message bearing multiple RFC5322.From identifiers is ambiguous
      under DMARC.  This includes messages with multiple RFC5322.From fields
      (which is also forbidden under <xref target="MAIL"/>) and a message
      with a single RFC5322.From field containing multiple entities.  Such
      messages SHOULD be rejected.  If they are not, they MUST be ignored with
      respect to all DMARC processing, as reliable alignment of verified
      identifiers with what the end user will actually see cannot be
      positively determined. </t>
  </section> <!-- Extract Author Domain -->

  <section title="Determine Handling Policy" anchor="receiver_policy">
   <t>To arrive at a policy disposition for an individual message,
      Mail Receivers MUST perform the following actions or their semantic
      equivalents.  The first four steps MAY be done in parallel, whereas
      steps 5 and 6 require input from previous steps.</t>
     
   <t>The steps are as follows:
      <list style="numbers">
       <t> Extract the RFC5322.From domain from the message. </t>

       <t> Query the DNS for a DMARC policy record.  Continue if one is
           found, or abort DMARC evaluation otherwise.  See
           <xref target="policy_discovery"/> for details. </t>

       <t> Perform DKIM signature verification checks.  A single email
           may contain multiple DKIM signatures.  The results of this
           step are passed to the remainder of the algorithm and MUST
           include the value of the "d=" tag from all DKIM signatures
           that successfully validated. </t>

       <t> Perform SPF validation checks.  The results of this step are passed
           to the remainder of the algorithm and MUST include the domain name
           from the RFC5321.MailFrom if SPF evaluation returned a "pass"
           result.</t>

       <t> Conduct identifier alignment checks.  With authentication checks
           and policy discovery performed, the Mail Receiver checks if
           Authenticated Identifiers fall into alignment as decribed in
           <xref target="terms_and_defs"/>.  If one or more of the
           Authenticated Identifiers align with the RFC5322.From domain, the
           message is considered to pass the DMARC mechanism check.  All
           other conditions (authentication failures, identifier mismatches)
           are considered to be DMARC mechanism check failures. </t>

       <t> Apply policy.  Emails that fail the DMARC mechanism check are
           disposed of in accordance with the discovered DMARC policy of the
           Domain Owner.  See <xref target="dmarc_format"/> for details. </t>
      </list> </t>

      <t> Heuristics applied in the absence of use by a Domain Owner of either
          SPF or DKIM (e.g., <xref target="Best-Guess-SPF"/>) SHOULD NOT
          be used, as it may be the case that the Domain Owner wishes a
          Message Receiver not to consider the results of that underlying
          authentication protocol at all. </t>
     </section>

     <section title="Message Sampling" anchor="sampling">
      <t> Attention must be paid to the possible presence of the "pct" tag in
          the DMARC policy record.  If the tag is present, the Mail Receiver
          MUST NOT enact the requested policy ("p" tag or "sp" tag") on more
          than the stated percent of the totality of affected messages.
          However, regardless of whether or not the "pct" tag is present, the
          Mail Receiver MUST include all relevant message data in any reports
          produced. </t>

      <t> If email is subject to the DMARC policy of "quarantine",
          the Mail Receiver SHOULD quarantine the message.  If the
          email is not subject to the "quarantine" policy (e.g., due to the
          "pct" tag), the Mail Receiver SHOULD apply local spam
          classification as normal. </t>

      <t> If email is subject to the DMARC policy of "reject", the Mail
          Receiver SHOULD reject the message (see <xref
          target="sec_rejection"/>).  If the email is not subject to the
          "reject" policy (due to the "pct" tag), the Mail Receiver SHOULD
          treat the email as though the "quarantine" policy applies.  This
          behavior allows senders to experiment with progressively stronger
          policies without relaxing existing policy.</t>
     </section> <!-- Message Sampling -->

     <section title="Store Results of DMARC Processing"
              anchor="feedback_store_mr_action">
      <t>The results of Mail Receiver-based DMARC processing should be stored
         for eventual presentation back to the Domain Owner in the form of
         aggregate feedback reports.  <xref target="dmarc_record"/> and <xref
         target="feedback_mechanism"/> discuss aggregate feedback.</t>

      <t>See <xref target="sec_storage"/> for a discussion of security
         matters regarding aggregation of such data. </t>
     </section> <!-- Store Results -->
 </section> <!-- Mail Receiver Actions -->

 <section title="Feedback Mechanism" anchor="feedback_mechanism">
  <t>The DMARC aggregate feedback report is designed to provide
     Domain Owners with precise insight into authentication results, where
     corrective action needs to be taken by Domain Owners, and the effect of
     Domain Owner DMARC policy on email streams processed by Mail Receivers. 
     The format of the original payload comprising the report can be found in
     <xref target="xml_schema"/>.</t>

  <t>The availability, publication, and consumption of aggregate DMARC
     feedback provides visibility into real-world email streams that Domain
     Owners need to make informed decisions regarding the publication of DMARC
     policy.  Based on this visibility, Domain Owners can publish DMARC
     policies and be fully cognizant of the resulting effect of policy
     enforcement by Mail Receivers.  This feedback mechanism significantly
     reduces the cost and risk of enforcing policies by Mail Receivers. </t>

   <section title="Discovery" anchor="discovery_fb_mech">
    <t>Discovery of a request to receive feedback data is made when a Mail
       Receiver looks up a DMARC policy record.  The presence of the "rua" tag
       specifies where to send feedback.  URI schemes found in "rua" tag that
       are not implemented by a Mail Receiver MUST be ignored. </t>

    <t>For more on the considerations given to DMARC discovery,
       see <xref target="discovery_requirements"/>.</t>
   </section> <!-- Discovery -->

   <section title="Transport" anchor="transport_fb_mech">
    <t>Where the URI specified in an "rua" tag does not specify otherwise,
       a Mail Receiver generating a feedback report SHOULD apply a secure
       transport mechanism.</t>

    <t>The Mail Receiver, after preparing a report, MUST evaluate the
       provided reporting URIs in the order given.  Any reporting URI that
       included a size limitation exceeded by the generated report
       (after compression and after any encoding required by the particular
       transport mechanism) MUST NOT be used. </t>

    <t>If transport is not possible because the services advertised by the
       published URIs are not able to accept reports (e.g., the URI refers
       to a service that is unreachable, or all provided URIs specify
       size limits exceeded by the generated record), the Mail Receiver
       SHOULD send a short report (see <xref target="error_reports"/>)
       indicating that a report is available but could not be sent.  The
       Mail Receiver MAY cache that data and try again later, or MAY
       discard data that could not be sent. </t>

      <section title="Email" anchor="email_transport_fb_mech">
       <t>In the case of a "mailto" URI, the Mail Receiver SHOULD
          communicate reports using the method described in <xref
          target="STARTTLS"/>. </t>

       <t>The message generated by the Mail Receiver must be a <xref
          target="MIME"/> formatted <xref target="MAIL"/> message. The
          aggregate report itself MUST be included in one of the parts of the
          message.  A human-readable portion MAY be included as a MIME part
          (such as a text/plain part). </t>

       <t>The aggregate data MUST be an XML file subjected to GZIP compression.
          The aggregate data MUST be present using the media type
          "application/gzip", and the filenames SHOULD be constructed using the
          following ABNF:

          <figure><artwork>
  filename = receiver "!" policy-domain "!" begin-timestamp "!"
             end-timestamp [ "!" unique-id ] "." extension

  unique-id = token
           ; "token" is imported form [MIME]

  receiver = domain
           ; imported from [MAIL]

  policy-domain = domain

  begin-timestamp = 1*DIGIT
                  ; seconds since 00:00:00 UTC January 1, 1970
                  ; indicating start of the time range contained
                  ; in the report

  end-timestamp = 1*DIGIT
                ; seconds since 00:00:00 UTC January 1, 1970
                ; indicating end of the time range contained
                ; in the report

  extension = "xml" / "gzip"
          </artwork></figure> </t>

	<t> For the GZIP file itself, the extension MUST be "gzip"; for the
	    XML report, the extension MUST be "xml". </t>

        <t> "unique-id" allows an optional unique ID generated by the Mail
	    Receiver to distinguish among multiple reports generated
	    simultaneously by different sources within the same ADMD. </t>

       <t> No specific MIME message structure is required.  It is presumed
           that the aggregate reporting address will be equipped to extract
           MIME parts with the prescribed media type and filename and
           ignore the rest. </t>

       <t>Email streams carrying DMARC feedback data MUST conform to
          the DMARC mechanism.  That is, the message comprising the report
          MUST be DKIM-signed and originate from a source for which an SPF
          test would pass.  This practice minimizes the risk of report
          consumers processing fraudulent reports. </t>

       <t>The RFC5322.Subject field for individual report submissions SHOULD
          conform to the following ABNF:

          <figure><artwork>
  dmarc-subject = %x52.65.70.6f.72.74 1*FWS    ; "Report"
                  %x44.6f.6d.61.69.6e.3a 1*FWS ; "Domain:"
                  domain-name 1*FWS            ; from RFC6376
                  %x53.75.62.6d.69.74.74.65.72.3a ; "Submitter:"
                  1*FWS domain-name 1*FWS
                  %x52.65.70.6f.72.74.2d.49.44.3a ; "Report-ID:"
                  msg-id                       ; from RFC5322
          </artwork></figure> </t>

       <t>The first domain-name indicates the DNS domain name about which
          the report was generated. The second domain-name indicates the
          DNS domain name representing the Mail Receiver generating the
          report.  The purpose of the Report-ID: portion of the field is
          to enable the Domain Owner to identify and ignore duplicate reports
          that might be sent by a Mail Receiver. </t>

       <t>This transport mechanism potentially encounters a problem
          when feedback data size exceeds maximum allowable attachment sizes
          for either the generator or the consumer.  See
          <xref target="error_reports"/> for further discussion. </t>
      </section> <!-- Email Transport -->

      <section title="HTTP" anchor="http_transport_fb_mech">
       <t>Where an "http" or "https" method is requested in a Domain Owner's
          URI list, the Mail Receiver MAY encode the data using the
          "application/gzip" media type or MAY send the
          <xref target="xml_schema"/> data uncompressed or unencoded. </t>

       <t>The header portion of the POST or PUT request SHOULD contain a
          Subject field as described in
          <xref target="email_transport_fb_mech"/>.</t>

       <t>HTTP permits the use of Content-Transfer-Encoding to upload gzip
          content using the POST or PUT instruction after translating the
          content to 7-bit ASCII. </t>
      </section> <!-- HTTP Transport -->

      <section title="Other Methods" anchor="other_transport_fb_mech">
       <t>Other registered URI schemes may be explicitly supported in later
          versions. </t>
      </section> <!-- Other Transport -->

      <section title="Error Reports" anchor="error_reports">
       <t> When a Mail Receiver is unable to complete delivery of a report
           via any of the URIs listed by the Domain Owner, the Mail Receiver
           SHOULD generate an error message.  An attempt MUST be made to send
           this report to all listed "mailto" URIs and MAY also be sent to
           any or all other listed URIs. </t>

       <t> The error report MUST be formatted per <xref target="MIME"/>.
           A text/plain part MUST be included that contains field-value
           pairs such as those found in Section 2 of <xref target="DSN"/>.
           The fields required, which may appear in any order, are:

           <list style="hanging">
            <t hangText="Report-Date:"> A <xref target="MAIL"/>-formatted
             date expression indicating when the transport failure
             occurred. </t>

            <t hangText="Report-Domain:"> The domain-name about which the
             failed report was generated. </t>

            <t hangText="Report-ID:"> The Report-ID: that the report tried
             to use. </t>

            <t hangText="Report-Size:"> The size, in bytes, of the report
             that was unable to be sent.  This MUST represent the number of
             bytes that the Mail Receiver attempted to send.  Where more than
             one transport system was attempted, the sizes may be different;
             in such cases, separate error reports MUST be generated so that
             this value matches the actual attempt that was made.  For
             example, a "mailto" error report would be sent to the "mailto"
             URIs with one size, while the "https" reports might be POSTed
             to those URIs with a different size, as they have different
             transport and encoding requirements. </t>

            <t hangText="Submitter:"> The domain-name representing the
             Mail Receiver that generated, but was unable to submit, the
             report. </t>

            <t hangText="Submitting-URI:"> The URI(s) to which the Mail
             Receiver tried, but failed, to submit the report.</t>
           </list> </t>

       <t> An additional text/plain part MAY be included that gives a
           human-readable explanation of the above, and MAY also include
           a URI that can be used to seek assistance. </t>

       <t> [NOTE: A more rigorous syntax specification, including ABNF and
           possible registration of a new media type, will be added here
           when more operational experience is acquired.]</t>
      </section> <!-- Error Reports -->
   </section> <!-- Transport -->
 </section> <!-- Feedback -->

 <section title="Minimum Implementations" anchor="minimum">
  <t> A minimum implementation of DMARC has the following characteristics:
      <list style="symbols">
        <t> Is able to send and/or receive reports at least daily; </t>

        <t> Is able to send and/or receive reports using "mailto" URIs; </t>

        <t> Other than in exceptional circumstances such as resource
            exhaustion, can generate or accept a report up to ten
            megabytes in size; </t>

        <t> If acting as a Mail Receiver, fully implements the provisions of
            <xref target="mail_receiver_actions"/>. </t>
      </list> </t>
 </section>

 <section title="IANA Considerations"
          anchor="iana_considerations">
  <t>This section describes actions requested of IANA.</t>

  <section title="Authentication-Results Method Registry Update"
           anchor="iana_auth_results_method">
   <t> IANA is requested to add the following to the Email Authentication
       Method Name Registry:

	<list style="hanging">
   		<t hangText="Method:"> dmarc </t>

		<t hangText="Defined In:"> [this memo] </t>

		<t hangText="ptype:"> header </t>

		<t hangText="property:"> from </t>

		<t hangText="value:"> the domain portion of the
			RFC5322.From field </t>
	</list> </t>
  </section>

  <section title="Authentication-Results Result Registry Update"
           anchor="iana_auth_results_result">
   <t> IANA has added the following in the Email Authentication Result Name
       Registry:

	<list style="hanging">
   		<t hangText="Code:"> none </t>

		<t hangText="Existing/New Code:"> existing </t>

		<t hangText="Defined In:"> <xref target="AUTH-RESULTS"/> </t>

		<t hangText="Auth Method:"> dmarc (added) </t>

		<t hangText="Meaning:"> No DMARC policy record was
		                        published for the aligned identifier,
		                        or no aligned identifier could be
		                        extracted. </t>
	</list>

	<list style="hanging">
   		<t hangText="Code:"> pass </t>

		<t hangText="Existing/New Code:"> existing </t>

		<t hangText="Defined In:"> <xref target="AUTH-RESULTS"/> </t>

		<t hangText="Auth Method:"> dmarc (added) </t>

		<t hangText="Meaning:"> A DMARC policy record was
		                        published for the aligned identifier,
		                        and at least one of the authentication
		                        mechanisms passed. </t>
	</list>

	<list style="hanging">
   		<t hangText="Code:"> fail </t>

		<t hangText="Existing/New Code:"> existing </t>

		<t hangText="Defined In:"> <xref target="AUTH-RESULTS"/> </t>

		<t hangText="Auth Method:"> dmarc (added) </t>

		<t hangText="Meaning:"> A DMARC policy record was
		                        published for the aligned identifier,
		                        and none of the authentication
		                        mechanisms passed. </t>
	</list>

	<list style="hanging">
   		<t hangText="Code:"> temperror </t>

		<t hangText="Existing/New Code:"> existing </t>

		<t hangText="Defined In:"> <xref target="AUTH-RESULTS"/> </t>

		<t hangText="Auth Method:"> dmarc (added) </t>

		<t hangText="Meaning:"> A temporary error occurred during
		                        DMARC evaluation.  A later attempt
		                        might produce a final result. </t>
	</list>

	<list style="hanging">
   		<t hangText="Code:"> permerror </t>

		<t hangText="Existing/New Code:"> existing </t>

		<t hangText="Defined In:"> <xref target="AUTH-RESULTS"/> </t>

		<t hangText="Auth Method:"> dmarc (added) </t>

		<t hangText="Meaning:"> A permanent error occurred during
		                        DMARC evaluation, such as encountering
		                        a syntactically incorrect DMARC record.
					A later attempt is unlikely to produce
					a final result. </t>
	</list> </t>
  </section>

  <section title="DMARC Tag Registry" anchor="iana_dmarc_tags">
   <t>Names of DMARC tags must be registered with IANA.  New entries are
      assigned only for values that have been documented in a published
      RFC that has had IETF Review, per <xref target="IANA-CONSIDERATIONS"/>.
      Each registration must include the tag name, the specification that
      defines it, a brief description, and its status which must be one
      of "current", "experimental" or "historic". </t>

   <t>The initial set of entries in this registry is as follows:

        <figure><artwork>
 +----------+-------------+---------+------------------------------+
 | Tag Name | Defined     | Status  | Description                  |
 +----------+-------------+---------+------------------------------+
 |  adkim   | [THIS MEMO] | current | DKIM alignment mode          |
 +----------+-------------+---------+------------------------------+
 |   aspf   | [THIS MEMO] | current | SPF alignment mode           |
 +----------+-------------+---------+------------------------------+
 |   pct    | [THIS MEMO] | current | Sampling rate                |
 +----------+-------------+---------+------------------------------+
 |    p     | [THIS MEMO] | current | Requested handling policy    |
 +----------+-------------+---------+------------------------------+
 |    rf    | [THIS MEMO] | current | Forensic reporting format(s) |
 +----------+-------------+---------+------------------------------+
 |    ri    | [THIS MEMO] | current | Aggregate Reporting interval |
 +----------+-------------+---------+------------------------------+
 |   rua    | [THIS MEMO] | current | Reporting URI(s) for         |
 |          |             |         | aggregate data               |
 +----------+-------------+---------+------------------------------+
 |   ruf    | [THIS MEMO] | current | Reporting URI(s) for         |
 |          |             |         | forensic data                |
 +----------+-------------+---------+------------------------------+
 |    sp    | [THIS MEMO] | current | Requested handling policy    |
 |          |             |         | for subdomains               |
 +----------+-------------+---------+------------------------------+
 |    v     | [THIS MEMO] | current | Specification version        |
 +----------+-------------+---------+------------------------------+
        </artwork></figure> </t>
  </section>

  <section title="DMARC Report Format Registry" anchor="iana_dmarc_formats">
   <t>Names of DMARC forensic reporting formats must be registered with 
      IANA.  New entries are assigned only for values that have been
      documented in a published RFC that has had IETF Review, per
      <xref target="IANA-CONSIDERATIONS"/>.  Each registration must include
      the tag name, the specification that defines it, a brief description,
      and its status which must be one of "current", "experimental" or
      "historic". </t>

   <t>The initial set of entries in this registry is as follows:

        <figure><artwork>
 +--------+-------------+---------+-----------------------------+
 | Format | Defined     | Status  | Description                 |
 |  Name  |             |         |                             |
 +--------+-------------+---------+-----------------------------+
 | afrf   | [THIS MEMO] | current | Authentication Failure      |
 |        |             |         | Reporting Format (see       |
 |        |             |         | [AFRF])                     |
 +--------+-------------+---------+-----------------------------+
 | iodef  | [THIS MEMO] | current | Incident Object Description |
 |        |             |         | Exchange Format (see        |
 |        |             |         | [IODEF])                    |
 +--------+-------------+---------+-----------------------------+
        </artwork></figure></t>
  </section>
 </section> <!-- IANA Considerations -->
    
 <section title="Security Considerations"
          anchor="sec_considerations">
  <t> This section discusses security-specific issues related to the
      DMARC mechanism. </t>

  <section anchor="sec_from" title="Use of RFC5322.From">
   <t> One of the most obvious points of security scrutiny for DMARC is
       the choice to focus on an identifier, namely the RFC5322.From, which
       is part of a body of data trivially forged throughout the history
       of email. </t>

   <t> Several points suggest it is the most correct and safest thing to do in
       this context:
 
       <list style="symbols">
         <t> Of all the identifiers that are part of the message itself,
             this is the only one guaranteed to be present. </t> 

         <t> It seems the best choice of an identifier on which to focus
             as most Mail User Agents (MUAs) display some or all of the
             contents of that field in a manner strongly suggesting those data
             as reflective of the true originator of the message. </t>

         <t> The focus of email authentication efforts has been to create
             mechanisms by which this field, or at least some field in the
             message, can be deemed genuine.  Thus, this field is not easily
             forged within the context of its use with DMARC.</t>

         <t> The DMARC mechanism confers no additional privilege to the
             message without successful authentication of this identifier. </t>
       </list></t>
  </section>

  <section anchor="sec_display" title="Display Name Attacks">
   <t> A common attack in messaging abuse is the presentation of false
       information in the "display name" portion of the RFC5322.From
       field.  For example, it is possible for the email address in that
       field to be an arbitrary address or domain name, while containing a
       well-known name (a person, brand, role, etc.) in the display name,
       intending to fool the end user into believing that the name is
       used legitimately.
       The attack is predicated on the notion that most common Mail User
       Agents (MUAs) will show the display name and not the email
       address when both are available. </t>

   <t> Generally, display name attacks are out of scope for DMARC as further
       exploration of possible defenses against these attacks needs to be
       undertaken. </t>

   <t> There are a few possible mechanisms that attempt mitigation of
       these attacks, such as:
       <list style="symbols">
	<t> If the display name is found to include an email address
	    (as specified in <xref target="MAIL"/>), execute the DMARC
	    mechanism on the domain name found there rather than the
	    domain name discovered originally.  However, this addresses
	    only a very specific attack space and is easily circumvented by
	    spoofers simply by not using an email address in the display
	    name.  There are also known cases of legitimate uses of an
            email address in the display name with a domain different from
	    the one in the address portion, e.g.:
		<figure><artwork>
     From: "user@example.org via Bug Tracker" &lt;support@example.com&gt;
		</artwork></figure> </t>

	<t> In the MUA, only show the display name if the DMARC mechanism
	    succeeds.  This too is easily defeated, as an attacker could
	    arrange to pass the DMARC tests while fraudulently using another
	    domain name in the display name. </t>

	<t> In the MUA, only show the display name if the DMARC mechanism
	    passes and the email address thus validated matches one found
	    in the receving user's list of known addresses. </t>
       </list> </t>
  </section>

  <section anchor="sec_rep_uris" title="Attacks on Reporting URIs">
   <t>URIs published in DNS TXT records are well-understood possible targets
      for attack.  Specifications such as <xref target="DNS"/> and <xref
      target="ROLES"/> either expose or cause the exposure of email addresses
      that could be flooded by an attacker, for example; MX, NS and other
      records found in the DNS advertise potential attack destinations; common
      DNS names such as "www" plainly identify the locations at which
      particular services can be found, providing destinations for targeted
      denial-of-service or penetration attacks. </t>

   <t>Thus, Domain Owners will need to harden these addresses against
      various attacks, including but not limited to:

      <list style="symbols">
       <t> high-volume denial-of-service attacks; </t>

       <t> deliberate construction of malformed reports intended to
           identify or exploit parsing or processing vulnerabilities; </t>

       <t> deliberate construction of reports containing false claims for
           the Submitter or Reported-Domain fields, including the possibility
           of false data from compromised but known Mail Receivers. </t>
      </list> </t>
  </section>

  <section anchor="sec_spf" title="Issues Specific to SPF">
   <t>SPF results are honored as a backup mechanism, even if DKIM verification
      fails or the signature is absent.  Senders with internal policies that
      require all of their mail to be signed may not express a need for this
      backup mechanism.  However, both senders and receivers benefit in
      significantly reduced support costs if unsigned mail-streams are
      discovered through aggregate feedback reports as opposed to rejection of
      legitimate email that otherwise passes with a valid SPF result.</t>

   <t>Though DMARC does not inherently change the semantics of an SPF policy
      record, historically lax enforcement of such policies has led many to
      publish extremely broad records containing many large network ranges. 
      Domain Owners are strongly encouraged to carefully review their SPF
      records to understand which networks are authorized to send on behalf of
      the Domain Owner before publishing a DMARC record.</t>
  </section>

  <section anchor="sec_dns" title="DNS Load">
   <t> DMARC policies are communicated using the DNS, and therefore inherit a
       number of considerations related to DNS caching.  The inherent conflict
       between freshness and the impact of caching on the reduction of
       DNS-lookup overhead should be considered from the Mail Receiver's point
       of view.  Should Domain Owners publish a DNS record with a very short
       TTL, Mail Receivers can be provoked through the injection of large
       volumes of messages to overwhelm the Domain Owner's DNS. Although this
       is not a concern specific to DMARC, the implications of a very short
       TTL should be considered when publishing DMARC policies.</t>

   <t> Conversely, long TTLs will cause records to be cached for long periods
       of time.  This can cause a critical change to DMARC parameters
       advertised by a Domain Owner to go unnoticed for the length of the TTL
       (while waiting for DNS caches to expire).  Avoiding this problem can
       mean shorter TTLs, with the potential problems described above.  A
       balance should be sought to maintain responsiveness of DMARC preference
       changes while preserving the benefits of DNS caching. </t>
  </section>

  <section anchor="sec_external" title="External Reporting Addresses">
   <t>To avoid abuse by bad actors, reporting addresses generally have to
      be inside the domains about which reports are requested.  In order
      to accommodate special cases such as a need to get reports about
      domains that cannot actually receive mail, <xref target="fb_verify"/>
      describes a DNS-based mechanism for verifying approved external
      reporting. </t>

   <t>The obvious consideration here is an increased DNS load against
      domains that are claimed as external recipients.  Negative caching
      will mitigate this problem, but only to a limited extent, mostly
      dependent on the default time-to-live in the domain's SOA record. </t>

   <t>Where possible, external reporting is best achieved by having the
      report be directed to domains that can receive mail and simply
      having it automatically forwarded to the desired external
      destination. </t>

   <t>Note that the addresses shown in the "ruf" tag receive more
      information that might be considered private data, since it is
      possible for actual email content to appear in the forensic reports.
      The URIs identified there are thus more attractive targets for
      intrusion attempts than those found in the "rua" tag.  Moreover,
      attacking the DNS of the subject domain to cause forensic data to
      be routed fraudulently to an attacker's systems may be an attractive
      prospect.  Deployment of <xref target="DNSSEC"/> is advisable if this
      is a concern. </t>

   <t>The verification mechanism presented in <xref target="fb_verify"/>
      is currently not mandatory ("MUST") but strongly recommended ("SHOULD").
      It is possible that it would be elevated to a "MUST" by later
      security review. </t>
  </section>

  <section anchor="sec_fbl" title="Feedback Loops">
   <t> Per <xref target="ARF-BCP"/> and <xref target="ARF-AS"/>, it is highly
      advisable to vet the destinations of feedback streams to which Mail
      Receivers will send data.  Sending reports to any party that asks
      invites various concerns regarding privacy of the data thus exchanged
      and the ability to keep up with what could be an enormous reporting
      stream. </t>

   <t> It is also advisable for any operator generating reports to have
      a mechanism by which one can request that no more reports be sent
      in case some entity becomes the unwitting recipient of undesired
      data in high volumes. </t>
  </section>

  <section anchor="sec_rejection" title="Rejecting Messages">
   <t> This proposal calls for rejection of a message during the SMTP
       session under certain circumstances.  This is typically done in one
       of two ways:

       <list style="symbols">
        <t> Full rejection, wherein the SMTP server issues a 5xy reply code
            (550 SHOULD be used) as an indication to the SMTP client that
	    the transaction failed; the SMTP client is then responsible for
	    generating notification that delivery failed (see Section 4.2.5 of
            <xref target="SMTP"/>). </t>

        <t> A "silent discard", wherein the SMTP server returns a 2xy reply
            code implying to the client that delivery (or, at least, relay)
            was successfully completed, but then simply discarding the
            message with no further action. </t>
       </list> </t>

   <t> Each of these has a cost.  For instance, a silent discard may prevent
       "backscatter" (the annoying generation of delivery failure reports,
       which go back to the RFC5321.MailFrom address, about messages that were
       fraudulently generated), but effectively means the SMTP server has
       to be programmed to give a false result, which can confound
       external debugging efforts. </t>

   <t> Similarly, the text portion of the SMTP reply may be important to
       consider.  For example, when rejecting a message, revealing the
       reason for the rejection might give an attacker enough information
       to bypass those efforts on a later attempt, though it might also
       assist a legitimate client to determine the source of some local issue
       that caused the rejection. </t>

   <t> If a Mail Receiver elects to defer delivery due to inability to
       retrieve or apply DMARC policy, this SHOULD be done with a 450 SMTP
       reply code. </t>
  </section>

  <section anchor="sec_storage" title="Capacity Planning">
   <t> DMARC participants will need to perform capacity planning to support
       their implementations.  Some factors to consider include:

       <list style="hanging">
        <t hangText="Storage:"> As Mail Receivers process increasing numbers
          of messages -- from increasingly disparate sources -- claiming to be
          from DMARC-enabled domains, additional storage of information must
          be considered to support the generation of feedback reports.
          Storage needs will also increase as the number of Domain Owners for
          which the Mail Receiver agrees to provide service increases. 
          Similarly, Domain Owners will need to plan based on how long they
          wish to store the data found in received reports. When Domain Owners
          enter exceptional situations and are unable to accept reports, Mail
          Receivers, as a matter of policy, might discard undelivered reports.
          </t>

        <t hangText="Frequency:"> Sending reports more frequently increases
          processing costs at both the Mail Receiver and the Domain Owner, but
          can decrease Mail Receiver storage requirements as data are consumed
          and storage is freed through report generation and transmission. At
          the same time, less frequent report generation may lead to somewhat
          stale feedback.  An appropriate balance should be sought.</t>

        <t hangText="DNS:"> DMARC imposes up to two additional DNS queries per
          arriving message, namely the TXT queries to try to locate a policy
          statement.  For Mail Receivers, these are queries sent; for Domain
          Owners, these are queries that must be handled.  Both sides will
          need to plan for the additional DNS load. </t>
       </list> </t>
  </section>

  <section anchor="sec_privacy" title="Privacy Considerations">
	<t> This section discusses security issues specific to private data
	    that may be included in the interactions that are part of
	    DMARC. </t>

	<section anchor="priv_data" title="Data Exposure Considerations">
        <t> Aggregate reports are limited in scope to DMARC policy and
            disposition results, to information pertaining to the underlying
            authentication mechanisms, and to the identifiers involved in
            DMARC validation. </t>

        <t> Failed message reporting provides message-specific details
            pertaining to authentication failures.  Individual reports can
            contain message content as well as trace header fields.  Domain
            Owners are able to analyze individual reports and attempt to
            determine root causes of authentication mechanism failures, gain
            insight into misconfigurations or other problems with email and
            network infrastructure, or inspect messages for insight into
            abusive practices. </t>

	<t> Both report types may expose sender and recipient
	    identifiers (e.g., RFC5322.From fields), and although the
	    <xref target="AFRF"/> format used for failed message
	    reporting supports redaction, it is capable of
	    exposing the entire message to the report recipient. </t>

	<t> Domain Owners requesting reports will receive information about
	    mail claiming to be from them, which includes mail that was not,
	    in fact, from them.  Information about the final destination of
	    mail where it might otherwise be obscured by intermediate systems
	    will therefore be exposed. </t>
	</section>

	<section anchor="priv_rcpt" title="Report Recipients">
        <t> A DMARC record can specify for reports to be sent to an
           intermediary operating on behalf of the Domain Owner.  This is done
           when the Domain Owner contracts with an entity to monitor
           mail-streams for abuse and performance issues.  Receipt by third
           parties of such data may or may not be permitted by the Mail
           Receiver's privacy policy, terms of use, or other similar governing
           document.  Domain Owners and Mail Receivers should both review and
           understand if their own internal policies constrain the use and
           transmission of DMARC reporting. </t>
	</section>

	<section anchor="priv_gen" title="Report Generators">
		<t> The entity (e.g., mailbox provider, Internet service
		    provider) receiving emails is typically responsible for
		    generating DMARC reports.  Such entities are typically
		    charged with protecting accidental disclosure of their
		    users' data.  In this case, disclosure is being requested
		    by the entity generating the email in the first place,
		    i.e., the Domain Owner, so this may not fit squarely
		    within existing privacy policy provisions.  For some
		    providers, aggregate and failed message reporting are
		    viewed as a function similar to complaint reporting about
		    spamming or phishing, and treated similarly under the
		    privacy policy.  Report generators (i.e., Mail Receivers)
		    are encouraged to review their reporting limitations under
		    such policies before enabling DMARC reporting. </t>
	</section>

	<section anchor="priv_tls" title="Secure Protocols">
		<t> This document encourages use of secure transport mechanisms to
            prevent loss of private data to third parties that may be able to
            monitor such transmissions.  Open transport mechanisms should be
            avoided. </t>
	</section>
  </section>

  <section anchor="sec_id_align" title="Identifier Alignment Considerations">
   <t> The DMARC mechanism allows both DKIM and SPF-authenticated identifiers
       to authenticate email on behalf of a Domain Owner, and, in
       the case of SPF, on behalf of different subdomains. If malicious or
       unaware users can gain control of the SPF record or signing practices
       for a sub-domain, the sub-domain can be used to generate DMARC-passing
       email on behalf of the Organizational Domain. </t>

   <t> For example, an attacker who controls the SPF record for
       "evil.example.com" can send mail with an RFC5322.From containing
       "foo@example.com" that can pass both authentication and the DMARC check
       against "example.com".</t>       

   <t> The Organizational Domain administrator should be careful not to cede
       control of sub-domains if this is an issue, and to consider using the
       "strict" Identifier Alignment option if appropriate. </t>
  </section>
  
  <section anchor="sec_id_align" title="Identifier Alignment Considerations">
   <t> The DMARC mechanism and its underlying technologies (SPF, DKIM)
       depend on the security of the DNS.  To reduce the risk of subversion
       of the DMARC mechanism due to DNS-based exploits, serious consideration
       should be given to the deployment of DNSSEC in parallel to the
       deployment of DMARC. </t>

   <t> DNSSEC-enabled environments should consider the implication of receiving
       insecure or bogus DNS replies in the DMARC context.  Operators should
       understand whether their DMARC implementations will behave as expected
       when DNSSEC-secured queries temporarily fail due to attempted
       exploit.  For example, if lookup of a specific domain's DMARC record is
       typically secured using DNSSEC, attention should to paid to cases and
       behaviors when secured lookups fail.  The operator may consider
       configuring their DNSSEC-aware resolver to propagate a "temporary
       error" condition to the DMARC mechanism to defer acceptance of email
       until DNSSEC resolution can be restored. </t>
  </section>
 </section> <!-- Security Considerations -->
</middle>

<back>
 <references title="Normative References">
	<reference anchor="ABNF">
		<front>
			<title> Augmented BNF for Syntax
			        Specifications: ABNF </title>
			<author initials="D." surname="Crocker"
				fullname="D. Crocker">
				<organization>
					Brandenburg InternetWorking
				</organization>
			</author>
			<author initials="P." surname="Overell"
				fullname="P. Overell">
				<organization>
					THUS plc.
				</organization>
			</author>
			<date month="January" year="2008" />
		</front>
		<seriesInfo name="RFC" value="5234" />
	</reference>

	<reference anchor="AFRF">
		<front>
			<title abbrev="AFRF">
				Authentication Failure Reporting using
				the Abuse Report Format
			</title>

			<author initials="H." surname="Fontana"
			        fullname="H. Fontana">
				<organization>
					eCert Inc.
				</organization>
			</author>

			<date month="September" year="2011"/>
		</front>

		<seriesInfo name="Internet-Draft" value="draft-ietf-marf-authfailure-report"/>
	</reference>

	<reference anchor="DKIM">
		<front>
			<title>
				DomainKeys Identified Mail (DKIM)
				Signatures
			</title>

			<author initials="D." surname="Crocker"
			        fullname="D. Crocker">
				<organization/>
			</author>

			<author initials="T." surname="Hansen"
			        fullname="T. Hansen">
				<organization/>
			</author>

			<author initials="M." surname="Kucherawy"
			        fullname="M. Kucherawy">
				<organization/>
			</author>

			<date year="2011" month="September"/>
		</front>

		<seriesInfo name="RFC" value="6376"/>
	</reference>

	<reference anchor="DNS">
		<front>
			<title abbrev="Domain Implementation and Specification">
				Domain names - implementation and
				specification
			</title>

			<author initials="P." surname="Mockapetris"
			        fullname="P. Mockapetris">
				<organization>USC/ISI</organization>

			</author>

			<date year="1987" day="1" month="November"/>
		</front>

		<seriesInfo name="STD" value="13"/>

		<seriesInfo name="RFC" value="1035"/>
	</reference>

	<reference anchor="DNS-CASE">
		<front>
			<title abbrev="DNS Case Insensitivity">
				Domain Name System (DNS) Case
				Insensitivity Clarification
			</title>

			<author initials="D." surname="Eastlake"
			        fullname="D. Eastlake 3rd">
				<organization>
					Motorola Laboratories
				</organization>

			</author>

			<date year="2006" month="January"/>
		</front>

		<seriesInfo name="RFC" value="4343"/>
	</reference>

	<reference anchor="IDNA">
		<front>
			<title> Internationalized Domain Names for
				Applications (IDNA): Definitions
				and Document Framework </title>
			<author initials="J." surname="Klensin"
			        fullname="J. Klensin">
			</author>
			<date month="August" year="2000" />
		</front>
		<seriesInfo name="RFC" value="5890" />
	</reference>

	<reference anchor="KEYWORDS">
		<front>
			<title abbrev="RFC Key Words">Key words for
			       use in RFCs to Indicate Requirement
			       Levels</title>

			<author initials="S." surname="Bradner"
			        fullname="Scott Bradner">
				<organization>Harvard University</organization>
			</author>

			<date year="1997" month="March"/>
		</front>

		<seriesInfo name="BCP" value="14"/>
		<seriesInfo name="RFC" value="2119"/>
	</reference>

	<reference anchor="MAIL">
		<front>
			<title>Internet Message Format</title>

			<author initials="P." surname="Resnick"
			        fullname="Peter W.  Resnick" role="editor">
				<organization>
					Qualcomm Incorporated
				</organization>
			</author>

			<date year="2008" month="October"/>
		</front>

		<seriesInfo name="RFC" value="5322"/>
	</reference>

	<reference anchor="MIME">
		<front>
			<title abbrev="Internet Message Bodies">
				Multipurpose Internet Mail Extensions
				(MIME) Part One: Format of Internet
				Message Bodies
			</title>

			<author initials="N." surname="Freed"
			        fullname="Ned Freed">
				<organization>
					Innosoft International, Inc.
				</organization>
			</author>

			<author initials="N.S." surname="Borenstein"
			        fullname="Nathaniel S. Borenstein">
				<organization>
					First Virtual Holdings
				</organization>
			</author>

			<date year="1996" month="November"/>
		</front>

		<seriesInfo name="RFC" value="2045"/>
	</reference>

	<reference anchor="SMTP">
		<front>
			<title>Simple Mail Transfer Protocol</title>

			<author initials="J." surname="Klensin"
			        fullname="J. Klensin">
				<organization/>
			</author>

			<date year="2008" month="October"/>

		</front>

		<seriesInfo name="RFC" value="5321"/>
	</reference>

	<reference anchor="SPF">
		<front>
			<title>
				Sender Policy Framework (SPF) for
				Authorizing Use of Domains in E-Mail,
				Version 1
			</title>
			<author initials="M." surname="Wong"
			        fullname="M. Wong">
				<organization/>
			</author>
			<author initials="W." surname="Schlitt"
			        fullname="W. Schlitt">
				<organization/>
			</author>
			<date year="2006" month="April"/>
		</front>
		<seriesInfo name="RFC" value="4408"/>
	</reference>

	<reference anchor="STARTTLS">
		<front>
			<title> SMTP Service Extension for Secure SMTP
			        over Transport Layer Security </title>
			<author initials="P." surname="Hoffman"
			        fullname="P. Hoffman">
				<organization>
					Internet Mail Consortium
				</organization>
			</author>

			<date month="February" year="2002"/>
		</front>

		<seriesInfo name="RFC" value="3207" />
	</reference>

	<reference anchor="URI">
		<front>
			<title> Uniform Resource Identifier (URI):
			        Generic Syntax </title>
			<author initials="T." surname="Berners-Lee"
			        fullname="T. Berners-Lee">
				<organization>
					W3C/MIT
				</organization>
			</author>
			<author initials="R." surname="Fielding"
			        fullname="R. Fielding">
				<organization>
					Day Software
				</organization>
			</author>
			<author initials="L." surname="Masinter"
			        fullname="L. Masinter">
				<organization>
					Adobe Systems
				</organization>
			</author>
			<date month="January" year="2005"/>
		</front>
		<seriesInfo name="RFC" value="3986" />
	</reference>
 </references>

 <references title="Informative References">
	<reference anchor="ADSP">
		<front>
			<title>
				DomainKeys Identified Mail (DKIM)
				Author Domain Signing Practices (ADSP)
			</title>

			<author initials="E." surname="Allman"
			        fullname="E. Allman">
				<organization>
					Sendmail, Inc.
				</organization>
			</author>

			<author initials="J." surname="Fenton"
			        fullname="J. Fenton">
				<organization>
					Cisco Systems, Inc.
				</organization>
			</author>

			<author initials="M." surname="Delany"
			        fullname="M. Delany">
				<organization>
					Yahoo!, Inc.
				</organization>
			</author>

			<author initials="J." surname="Levine"
			        fullname="J. Levine">
				<organization>
					Taughannock Networks
				</organization>
			</author>

			<date year="2009" month="August"/>

		</front>

		<seriesInfo name="RFC" value="5617"/>
	</reference>

	<reference anchor="ARF">
		<front>
			<title> An Extensible Format for Email Feedback
				Reports </title>

			<author initials="Y." surname="Shafranovich"
			        fullname="Y. Shafranovich">
				<organization>
					ShafTek Enterprises
				</organization>
			</author>

			<author initials="J." surname="Levine"
			        fullname="J. Levine">
				<organization>
					Taughannock Networks
				</organization>
			</author>

			<author initials="M." surname="Kucherawy"
			        fullname="M. Kucherawy">
				<organization>
					Cloudmark
				</organization>
			</author>

			<date month="August" year="2010" />
		</front>
		<seriesInfo name="RFC" value="5965"/>
	</reference>

	<reference anchor="ARF-AS">
		<front>
			<title> Creation and Use of Email Feedback Reports:
			        An Applicability Statement for the Abuse
			        Reporting Format (ARF) </title>

			<author initials="J.D." surname="Falk"
			        fullname="J.D. Falk">
				<organization>
					Return Path
				</organization>
			</author>

			<author initials="M." surname="Kucherawy"
			        fullname="M. Kucherawy" role="editor">
				<organization>
					Cloudmark
				</organization>
			</author>

			<date month="March" year="2012" />
		</front>
		<seriesInfo name="Internet-Draft" value="draft-ietf-marf-as"/>
	</reference>

	<reference anchor="ARF-BCP">
		<front>
			<title> Message Header Field for Indicating
			        Message Authentication Status </title>
			<author initials="J.D." surname="Falk"
			        fullname="J.D. Falk">
				<organization>
					Messaging Anti-Abuse WG
				</organization>
			</author>
			<date month="November" year="2011" />
		</front>
		<seriesInfo name="RFC" value="6449"/>
	</reference>

	<reference anchor="AUTH-RESULTS">
		<front>
			<title> Message Header Field for Indicating
			        Message Authentication Status </title>
			<author initials="M." surname="Kucherawy"
			        fullname="M. Kucherawy">
				<organization>
					Sendmail, Inc.
				</organization>
			</author>
			<date month="April" year="2009" />
		</front>
		<seriesInfo name="RFC" value="5451"/>
	</reference>

	<reference anchor="Best-Guess-SPF" target="http://www.openspf.org/FAQ/Best_guess_record">
		<front>
			<title>
				Sender Policy Framework: Best guess record
				(FAQ entry)
			</title>

			<author initials="S." surname="Kitterman"
			        fullname="S. Kitterman">
				<organization/>
			</author>

			<date month="May" year="2010"/>
		</front>
	</reference> 

	<reference anchor="DKIM-DEPLOYMENT">
		<front>
			<title>
				DomainKeys Identified Mail (DKIM)
				Development, Deployment, and Operations
			</title>

			<author initials="T." surname="Hansen"
			        fullname="T. Hansen">
				<organization>
					AT&amp;T Laboratories
				</organization>
			</author>

			<author initials="E." surname="Siegel"
			        fullname="E. Siegel">
				<organization/>
			</author>

			<author initials="D." surname="Crocker"
			        fullname="D. Crocker">
				<organization>
					Brandenburg InternetWorking
				</organization>
			</author>

			<author initials="P." surname="Hallam-Baker"
			        fullname="P. Hallam-Baker">
				<organization>
					Default Deny Security, Inc.
				</organization>
			</author>

			<date month="May" year="2010"/>
		</front>
		<seriesInfo name="RFC" value="5863"/>
	</reference>

	<reference anchor="DKIM-OVERVIEW">
		<front>
			<title>
				DomainKeys Identified Mail (DKIM) Service
				Overview
			</title>

			<author initials="T." surname="Hansen"
			        fullname="T. Hansen">
				<organization>
					AT&amp;T Laboratories
				</organization>
			</author>

			<author initials="D." surname="Crocker"
			        fullname="D. Crocker">
				<organization>
					Brandenburg InternetWorking
				</organization>
			</author>

			<author initials="P." surname="Hallam-Baker"
			        fullname="P. Hallam-Baker">
				<organization>
					Default Deny Security, Inc.
				</organization>
			</author>

			<date month="July" year="2009"/>
		</front>
		<seriesInfo name="RFC" value="5585"/>
	</reference>

	<reference anchor="DNSSEC">
		<front>
			<title> DNS Security Introduction and
				Requirements </title>

			<author initials="R." surname="Arends"
			        fullname="R. Arends">
				<organization>
					Telematica Instituut
				</organization>
			</author>

			<author initials="R." surname="Austein"
			        fullname="R. Austein">
				<organization>
					ISC
				</organization>
			</author>

			<author initials="M." surname="Larson"
			        fullname="M. Larson">
				<organization>
					VeriSign
				</organization>
			</author>

			<author initials="D." surname="Massey"
			        fullname="D. Massey">
				<organization>
					Colorado State University
				</organization>
			</author>

			<author initials="S." surname="Rose"
			        fullname="S. Rose">
				<organization>
					NIST
				</organization>
			</author>

			<date month="March" year="2005" />
		</front>

		<seriesInfo name="RFC" value="4033" />
	</reference>

	<reference anchor="DSN">
		<front>
			<title> An Extensible Message Format for
			        Delivery Status Notifications </title>

			<author initials="K." surname="Moore"
			        fullname="K. Moore">
				<organization>
					University of Tennessee
				</organization>
			</author>
			<author initials="G." surname="Vaudreuil"
			        fullname="G. Vaudreuil">
				<organization>
					Lucent Technologies
				</organization>
			</author>

			<date month="January" year="2003" />
		</front>
		<seriesInfo name="RFC" value="3464" />
	</reference>

	<reference anchor="EMAIL-ARCH">
		<front>
			<title> Internet Mail Architecture </title>
			<author initials="D." surname="Crocker"
			        fullname="D. Crocker">
				<organization>
					Brandenburg InternetWorking
				</organization>
			</author>
			<date month="July" year="2009" />
		</front>
		<seriesInfo name="RFC" value="5598" />
	</reference>

	<reference anchor="IANA-CONSIDERATIONS">
		<front>
			<title>
				Guidelines for Writing an IANA
				Considerations Section in RFCs
			</title>

			<author initials="T." surname="Narten"
			        fullname="T. Narten">
				<organization/>
			</author>

			<author initials="H." surname="Alvestrand"
			        fullname="H. Alvestrand">
				<organization/>
			</author>

			<date year="2008" month="May"/>
		</front>

		<seriesInfo name="BCP" value="26"/>
		<seriesInfo name="RFC" value="5226"/>
	</reference>

	<reference anchor="IODEF">
		<front>
			<title> The Incident Object Description Exchange
				Format </title>

			<author initials="R." surname="Danyliw"
			        fullname="R. Danyliw">
				<organization>
					CERT
				</organization>
			</author>
			<author initials="J." surname="Meijer"
			        fullname="J. Meijer">
				<organization>
					UNINETT
				</organization>
			</author>
			<author initials="Y." surname="Demchenko"
			        fullname="Y. Demchenko">
				<organization>
					University of Amsterdam
				</organization>
			</author>

			<date month="December" year="2007" />
		</front>
		<seriesInfo name="RFC" value="5070" />
	</reference>

	<reference anchor="ROLES">
		<front>
			<title> Mailbox Names for Common Services, Roles and
			        Functions </title>
			<author initials="D." surname="Crocker"
			        fullname="D. Crocker">
				<organization>
					Internet Mail Consortium
				</organization>
			</author>
			<date month="May" year="1997" />
		</front>
		<seriesInfo name="RFC" value="2142" />
	</reference>
 </references>

 <section title="Technology Considerations" anchor="app_choices">
  <t> This section documents some design decisions that were made in the
      development of DMARC.  Specifically, addressed here are some suggestions
      that were considered but not included in the design.  This text
      is included to explain why they were considered and not included
      in this version. </t>

  <section title="S/MIME" anchor="app_choices_smime">
   <t> S/MIME, or Secure Multipurpose Internet Mail Extensions, is a standard
       for encryption and signing of MIME data in a message.  This was
       suggested and considered as a third security protocol for authenticating
       the source of a message. </t>

   <t> DMARC is focused on authentication at the domain level (i.e., the ADMD
       taking responsibility for the message), while S/MIME is really
       intended for user-to-user authentication and encryption.  This alone
       appears to make it a bad fit for DMARC's goals. </t>

   <t> S/MIME also suffers from the heavyweight problem of Public Key
       Infrastructure, which means distribution of keys used to verify
       signatures needs to be incorporated.  In many instances, this alone
       is a showstopper.  There have been consistent promises that PKI
       usability and deployment will improve, but these have yet to
       materialize.  DMARC can revisit this chouice after those barriers
       are addressed. </t>

   <t> S/MIME has extensive deployment in specific market segments
       (government, for example), but does not enjoy similar widespread
       deployment over the general Internet, and this shows no signs of
       changing.  DKIM and SPF both are deployed widely over the general
       Internet and their adoption rates continue to be positive. </t>

   <t> Finally, experiements have shown that including S/MIME support in
       the initial version of DMARC would neither cause nor enable a
       substantial increase in the accuracy of the overall mechanism. </t>
  </section>

  <section title="Method Exclusion" anchor="app_choices_exclusion">
   <t> It was suggested that DMARC include a mechanism by which a Domain
       Owner could tell Message Receivers not to attempt validation by
       one of the supported methods (e.g., "check DKIM, but not SPF"). </t>

   <t> Specifically, consider a Domain Owner that has deployed one of the
       technologies, and that technology fails for some messages, but such
       failures don't cause enforcement action.  Deploying DMARC would
       cause enforcement action for policies other than "none", which would
       appear to exclude participation by that Domain Owner. </t>

   <t> The DMARC development team evaluated the idea of policy exception
       mechanisms on several occasions and invariably concluded that there
       was not a strong enough use case to include them.  The specific target
       audience for DMARC does not appear to have concerns about the
       failure modes of one or the other being a barried to DMARC's
       adoption. </t>

   <t> In the scenario described above, the Domain Owner has a few options:

       <list style="numbers">
	<t> Tighten up its infrastructure to minimize the failure modes
	    of the single deployed technology. </t>

	<t> Deploy the other supported authentication mechanism, to offset
	    the failure modes of the first. </t>

	<t> Deploy DMARC in a reporting-only mode. </t>
       </list> </t>
  </section>

  <section title="Sender Header Field" anchor="app_choices_sender">
   <t> It has been suggested in several message authentication efforts
       that the Sender header field be checked for an identifier of interest,
       as the standards indicate this as the proper way to indicate a
       re-mailing of content such as through a mailing list.  Most recently,
       it was a protocol-level option for DomainKeys, but on evolution
       to DKIM, this property was removed. </t>

   <t> The DMARC development team considered this and decided not to include
       support for doing so, for two primary reasons:

       <list style="numbers">
	<t> The main user protection approach is to be concerned with what
	    the user sees when a message is rendered.  There is no consistent
	    behaviour among MUAs regarding what to do with the content of
	    the Sender field, if present.  Accordingly, supporting checking
	    of the Sender identifier would mean applying policy to an
	    identifier the end user might never actually see, which can
	    create a vector for attack against end users by simply forging
	    a Sender field containing some identifier that DMARC will
	    like. </t>

	<t> Although it is certainly true that this is what Sender is for,
	    its use in this way is also unreliable, making it a poor candidate
	    for inclusion in the DMARC evaluation algorithm. </t>

    <t> Allowing multiple ways to discover policy introduces unacceptable
        ambiguity into the DMARC evaluation algorithm in terms of which
        policy is to be applied and when. </t>

       </list> </t>
  </section>

  <section title="Domain Existence Test" anchor="app_dom_exist">
   <t> A common practice among MTA operators, and indeed one documented in
       <xref target="ADSP"/>, is a test to determine domain existence prior
       to any more expensive processing.  This is typically done by
       querying the DNS for MX, A or AAAA resource records for the name being
       evaluated, and assuming the domain is non-existent if it could be
       determined that no such records were published for that domain
       name. </t>

   <t> The original pre-standardization version of this protocol included
       a mandatory check of this nature.  It was ultimately removed, as
       the method's error rate was too high without substantial manual
       tuning and heuristic work.  There are indeed use cases this work
       needs to address where such a method would return a negative result
       about a domain for which reporting is desired, such as a registered
       domain name that never sends legitimate mail and thus has none of
       these records present in the DNS. </t>
  </section>
 
  <section title="Issues With ADSP In Operation" anchor="issues_with_adsp">
   <t>DMARC has been chacarterized as a "super-ADSP" of sorts. </t>

   <t>Contributors to DMARC have compiled a list of issues
      associated with ADSP, gained from operational experience, that
      have influenced the direction of DMARC:

     <list style="numbers">
      <t> ADSP has no support for subdomains, i.e., the ADSP record for
          example.com does not explicitly or implicitly apply to
          subdomain.example.com.  If wildcarding is not applied, then
          spammers can trivially bypass ADSP by sending from a subdomain with
          no ADSP record. </t>
      <t> Non-existent subdomains are explicitly out of scope in ADSP.  There
          is nothing in ADSP that states receivers should simply reject mail
          from NXDOMAINs regardless of ADSP policy (which of course allows
          spammers to trivially bypass ADSP by sending email from non-existent
          subdomains). </t>
      <t> ADSP has no operational advice on when to look up the ADSP
          record. </t>
      <t> ADSP has no support for using SPF as an auxiliary mechanism to
          DKIM. </t>
      <t> ADSP has no support for a slow roll-out, i.e., no way to configure a
          percentage of email on which the receiver should apply the policy.
          This is important for large-volume senders. </t>
      <t> ADSP has no explicit support for an intermediate phase where the
          receiver quarantines (e.g., sends to the recipient's "spam" folder)
          rather than rejects the email. </t>
      <t> The binding between the "From" header domain and DKIM is too tight
          for ADSP; they must match exactly. </t>
     </list></t>
  </section>

  <section title="Organizational Domain Discovery Issues" anchor="od_issues">
   <t> Although protocols like ADSP are useful for "protecting" a specific
       domain name, they are not helpful at protecting subdomains.  If one
       wished to protect "example.com" by requiring via ADSP that all mail
       bearing an RFC5322.From domain of "example.com" be signed, this would
       "protect" that domain; however, one could then craft an email whose
       RFC5322.From domain is "security.example.com", and ADSP would not
       provide any protection.  One could use a DNS wildcard, but this can
       undesirably interfere with other DNS activity; one could add ADSP
       records as fraudulent domains are discovered, but this solution does
       not scale and is a purely reactive measure against abuse. </t>
  
   <t> The DNS does not provide a method by which the "domain of record",
       or the domain that was actually registered with a domain registrar,
       can be determined given an arbitrary domain name.  Suggestions have
       been made that attempt to glean such information from SOA or NS
       resource records, but these too are not fully reliable as the
       partitioning of the DNS is not always done at administrative
       boundaries. </t>

   <t> When seeking domain-specific policy based on an arbitrary domain name,
       one could "climb the tree", dropping labels off the left end of the
       name until the root is reached or a policy is discovered, but then
       one could craft a name that has a large number of nonsense labels; this
       would cause a Mail Receiver to attempt a large number of queries in
       search of a policy record.  Sending many such messages constitutes
       an amplified denial-of-service attack. </t>

   <t> The Organizational Domain mechanism is a necessary component to the
       goals of DMARC.  The method described in <xref target="terms_and_defs"/>
       is not perfect, but serves this purpose reasonably well without adding
       undue burden or semantics to the DNS. </t>

   <section title="Public Suffix Lists" anchor="suffixes">
    <t> A public suffix list for the purposes of determining the Organizational
        Domain can be obtained from various sources.  The most common one 
        is maintained by the Mozilla Foundation and made public at
        http://publicsuffix.org.  License terms governing the use of that
        list are available at that URI. </t>
   </section>
  </section>
 </section>

 <section title="Examples" anchor="examples">
  <t> This section illustrates both the Domain Owner side and the Mail
      Receiver side of a DMARC exchange. </t>

  <section title="Identifier Alignment examples" anchor="ex_id_align">
   <t> The following examples illustrate the DMARC mechanism's use of
       Identifier Alignment.  For brevity's sake, only message headers are
       shown as message bodies are not considered when conducting DMARC
       checks. </t>

   <section title="SPF" anchor="ex_spf_id_align">
    <t> The following SPF examples assume that SPF produces a passing result. </t>

    <t> <figure>
         <preamble> Example 1: SPF in alignment: </preamble>
         <artwork>
     MAIL FROM: &lt;sender@example.com&gt;

     From: sender@example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> SPF In Alignment </postamble>
        </figure> </t>

    <t> In this case, the RFC5321.MailFrom parameter and the RFC5322.From
        field have identical DNS domains.  Thus, the identifiers are
        in alignment. </t>

    <t> <figure>
         <preamble> Example 2: SPF in alignment (parent): </preamble>
         <artwork>
     MAIL FROM: &lt;sender@example.com&gt;

     From: sender@child.example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> SPF In Alignment (Parent) </postamble>
        </figure> </t>

    <t> In this case, the RFC5321.MailFrom parameter includes a DNS domain
        that is a parent of the RFC5322.From domain.  Thus, the identifiers are
        in alignment if "relaxed" SPF mode is requested by the Domain Owner,
        and not in alignment if "strict" SPF mode is requested. </t>

    <t> <figure>
         <preamble> Example 3: SPF not in alignment: </preamble>
         <artwork>
     MAIL FROM: &lt;sender@sample.net&gt;

     From: sender@child.example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> SPF Not In Alignment </postamble>
        </figure> </t>

    <t> In this case, the RFC5321.MailFrom parameter includes a DNS domain
        that is neither the same as nor a parent of the RFC5322.From domain.
        Thus, the identifiers are not in alignment. </t>
   </section>

   <section title="DKIM" anchor="ex_dkim_id_align">
     <t> The examples below assume the DKIM signatures pass verification.
         Alignment cannot exist with a DKIM signature that does not
         verify. </t>

     <t> <figure>
         <preamble> Example 1: DKIM in alignment: </preamble>
         <artwork>
     DKIM-Signature: v=1; ...; d=example.com; ...
     From: sender@example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> DKIM In Alignment </postamble>
        </figure> </t>

    <t> In this case, the DKIM "d=" parameter and the RFC5322.From
        field have identical DNS domains.  Thus, the identifiers are
        in alignment. </t>

    <t> <figure>
         <preamble> Example 2: DKIM in alignment (parent): </preamble>
         <artwork>
     DKIM-Signature: v=1; ...; d=example.com; ...
     From: sender@child.example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> DKIM In Alignment (Parent) </postamble>
        </figure> </t>

    <t> In this case, the DKIM signature's "d=" parameter includes a DNS domain
        that is a parent of the RFC5322.From domain.  Thus, the identfiers are
        in alignment. </t>

    <t> <figure>
         <preamble> Example 3: DKIM not in alignment: </preamble>
         <artwork>
     DKIM-Signature: v=1; ...; d=sample.net; ...
     From: sender@child.example.com
     Date: Fri, Feb 15 2002 16:54:30 -0800
     To: receiver@example.org
     Subject: here's a sample
         </artwork>
	 <postamble> DKIM Not In Alignment </postamble>
        </figure> </t>

    <t> In this case, the DKIM signature's "d=" parameter includes a DNS domain
        that is neither the same as nor a parent of the RFC5322.From domain.
        Thus, the identifiers are not in alignment. </t>
   </section>
  </section>

  <section title="Domain Owner example" anchor="ex_owner">
   <t> A Domain Owner that wants to use DMARC should have already deployed and
       tested SPF and DKIM.  The next step is to publish a DNS record that
       advertises a DMARC policy for the Domain Owner's organizational domain.
       </t>

   <section title="Entire Domain, Monitoring Only" anchor="ex_owner_1">
    <t> The owner of the domain "example.com" has deployed SPF and DKIM on its
        messaging infrastructure.  The owner wishes to begin using DMARC with
        a policy that will solicit aggregate feedback from receivers without
        affecting how the messages are processed, in order to:

        <list style="symbols">
         <t> Confirm that its legitimate messages are authenticating
             correctly </t>

         <t> Verify that all authorized message sources have implemented
             authentication measures </t>

         <t> Determine how many messages from other sources would be
             affected by a blocking policy </t>
        </list></t>

    <t> The Domain Owner accomplishes this by constructing a policy record
        indicating that:

        <list style="symbols">
         <t> The version of DMARC being used is "DMARC1" ("v=DMARC1") </t>

         <t> Receivers should not alter how they treat these messages because
             of this DMARC policy record ("p=none") </t>

         <t> Aggregate feedback reports should be sent via email to the
             address "dmarc-feedback@example.com" 
             ("rua=mailto:dmarc-feedback@example.com") </t>

         <t> All messages from this organizational domain are subject to this
             policy (no "pct" tag present, so the default of 100% applies) </t>
        </list></t>

    <t> The DMARC policy record might look like this when retrieved using a
        common command-line tool:

        <figure><artwork>
  % dig +short TXT _dmarc.example.com.
  "v=DMARC1\; p=none\; rua=mailto:dmarc-feedback@example.com"
        </artwork></figure></t>

    <t> To publish such a record, the DNS administrator for the Domain Owner
        creates an entry like the following in the appropriate zone file
        (following the conventional zone file format):

        <figure><artwork>
  ; DMARC record for the domain example.com

  _dmarc  IN TXT ( "v=DMARC1; p=none; "
                   "rua=mailto:dmarc-feedback@example.com" )
        </artwork></figure></t>
   </section>

   <section title="Entire Domain, Monitoring Only, Per-Message Reports"
            anchor="ex_owner_2">
	<t> The Domain Owner from the previous example has used the aggregate
	    reporting to discover some messaging systems that had not yet
	    implemented DKIM correctly, but they are still seeing periodic
	    authentication failures. In order to diagnose these intermittent
	    problems they wish to request per-message forensic reports when
	    authentication failures occur. </t>

	<t> Not all Receivers will honor such a request, but the Domain Owner
            feels that any reports it does receive will be helpful enough to
	    justify publishing this record.  The default per-message report
	    format (<xref target="AFRF"/>) meets the Domain Owner's needs in
	    this scenario. </t>

	<t> The Domain Owner accomplishes this by adding the following to its
	    policy record from <xref target="ex_owner"/>):

		<list style="symbols">
			<t> Per-message forensic reports should be sent via
			    email to the address "auth-reports@example.com"
			    ("ruf=mailto:auth-reports@example.com") </t>
		</list> </t>

	<t> The DMARC policy record might look like this when retrieved
	    using a common command-line tool (the output shown would appear
	    on a single line, but is wrapped here for publication):

	    <figure><artwork>
  % dig +short TXT _dmarc.example.com.
  "v=DMARC1\; p=none\; rua=mailto:dmarc-feedback@example.com\;
   ruf=mailto:auth-reports@example.com"
	    </artwork></figure> </t>

	<t> To publish such a record, the DNS administrator for the
	    Domain Owner might create an entry like the following in
	    the appropriate zone file (following the conventional zone file
	    format):

	    <figure><artwork>
 ; DMARC record for the domain example.com

 _dmarc  IN TXT ( "v=DMARC1; p=none; "
                  "rua=mailto:dmarc-feedback@example.com; "
                  "ruf=mailto:auth-reports@example.com" )
	    </artwork></figure> </t>
   </section>

   <section title="Per-Message Forensic Reports Directed to Third Party"
            anchor="ex_owner_2_1">
    <t> The Domain Owner from the previous example is maintaining the same
        policy, but now wishes to have a third party receive and process the
        per-message forensic reports. Again, not all Receivers will honor this
        request, but those that do may implement additional checks to validate 
        that the third party wishes to receive the forensic reports for this
        domain. </t>

    <t> The Domain Owner needs to alter its policy record from
        <xref target="ex_owner_2"/> as follows:

	<list style="symbols">
		<t> Per message forensic reports should be send via email
		    to the address "auth-reports@thirdparty.example.net"
		    ("ruf=mailto:auth-reports@thirdparty.example.net") </t>
	</list> </t>

    <t> The DMARC policy record might look like this when retrieved using a
	common command-line tool (the output shown would appear on a single
	line, but is wrapped here for publication):

	<figure><artwork>
  % dig +short TXT _dmarc.example.com.
  "v=DMARC1\; p=none\; rua=mailto:dmarc-feedback@example.com\;
   ruf=mailto:auth-reports@thirdparty.example.net"
	</artwork></figure> </t>

    <t> To publish such a record, the DNS administrator for the Domain Owner
	might create an entry like the following in the appropriate zone file
	(following the conventional zone file format):

	<figure><artwork>
  ; DMARC record for the domain example.com

  _dmarc IN TXT ( "v=DMARC1; p=none; "
                  "rua=mailto:dmarc-feedback@example.com; "
                  "ruf=mailto:auth-reports@thirdparty.example.net" )
	</artwork></figure></t>

    <t> Because the address used in the "ruf" tag is outside the Organizational
        Domain in whichthat this record is published, conforming Receivers will
	implement additional checks as described in <xref target="fb_verify"/>
	of this document.  In order to pass these additional checks, the third
	party will need to publish an additional DNS record as follows:

	<list style="symbols">
		<t> Given the DMARC record published by the Domain Owner at
		    "_dmarc.example.com", the DNS administrator for the
		    third party will need to publish a TXT resource record at
		    "example.com._report._dmarc.thirdparty.example.net" with
		    the value "v=DMARC1". </t>
	</list> </t>

    <t> The resulting DNS record might look like this when retrieved using a
        common command-line tool (the output shown would appear on a single
        line, but is wrapped here for publication):

	<figure><artwork>
  % dig +short TXT example.com._report._dmarc.thirdparty.example.net
  "v=DMARC1"
	</artwork></figure></t>

    <t> To publish such a record, the DNS administrator for example.net might
        create an entry like the following in the appropriate zone file
	(following the conventional zone file format):

	<figure><artwork>
  ; zone file for thirdparty.example.net
  ; Accept DMARC forensic reports on behalf of example.com

  example.com._report._dmarc   IN   TXT    "v=DMARC1"
	</artwork></figure></t>

    <t> Intermediaries and other third parties should refer to
	<xref target="fb_verify"/> for the full details of this mechanism. </t>
   </section>

   <section title="Sub-Domain, Sampling, and Multiple Aggregate Report URIs"
            anchor="ex_owner_3">
    <t> The Domain Owner has implemented SPF and DKIM in a sub-domain used
        for pre-production testing of messaging services.  It now wishes to
        request that participating receivers act to reject messages from this
        sub-domain that fail to authenticate. </t>

    <t> As a first step it will ask that a portion (1/4 in this example) of
        failing messages be quarantined, enabling examination of messages
        sent to mailboxes hosted by participating receivers.  Aggregate
        feedback reports will be sent to a mailbox within the Organizational
        Domain, and to a mailbox at a third party selected and authorized
        to receive same by the Domain Owner. </t>

    <t> The Domain Owner will accomplish this by constructing a policy record
        indicating that:

        <list style="symbols">
         <t> The version of DMARC being used is "DMARC1" ("v=DMARC1") </t>

	 <t> It is applied only to this sub-domain (record is published at
	     "_dmarc.test.example.com" and not "_dmarc.example.com") </t>

         <t> Receivers should quarantine messages from this organizational
             domain that fail to authenticate ("p=quarantine") </t>

         <t> Aggregate feedback reports should be sent via email to the
             addresses "dmarc-feedback@example.com" and
             "example-tld-test@thirdparty.example.net"
             ("rua=mailto:dmarc-feedback@example.com,mailto:tld-test@thirdparty.example.net") </t>

         <t> 25% of messages from this Organizational Domain are subject to
             action based on this policy ("pct=25") </t>
        </list></t>

    <t> The DMARC policy record might look like this when retrieved using a
        common command-line tool (the output shown would appear on a single
        line, but is wrapped here for publication):

        <figure><artwork>
  % dig +short TXT _dmarc.test.example.com
  "v=DMARC1\; p=quarantine\; rua=mailto:dmarc-feedback@example.com,
   mailto:tld-test@thirdparty.example.net\; pct=25"
		</artwork></figure></t>

    <t> To publish such a record, the DNS administrator for the Domain Owner
        might create an entry like the following in the appropriate zone file:

        <figure><artwork>
  ; DMARC record for the domain example.com

  _dmarc IN  TXT  ( "v=DMARC1; p=quarantine; "
                    "rua=mailto:dmarc-feedback@example.com,"
                    "mailto:tld-test@thirdparty.example.net; "
                    "pct=25" )
        </artwork></figure></t>
   </section>

   <section title="Third Party Sender and Identifier Alignment"
            anchor="ex_third">
    <t> The Domain Owner only uses the top-level domain for email, and uses
        a third-party sender for some marketing message traffic.  It has
        implemented SPF and DKIM across its in-house infrastructure and
        required the third-party to do the same.  A monitoring period has
        shown that the Domain Owner and the third-party sender are both
        executing well with respect to email authentication measures. </t>

    <t> The third-party has access to the appropriate DKIM private or signing
        keys for the selectors it will use.  However the third-party uses
        sub-domains like "id1234.bounces.example.com" in the RFC5321.Mailfrom
        address for campaign tracking and troubleshooting purposes.  The
        sub-domain "bounces.example.com" has been delegated to the
        third-party so that it can publish appropriate MX records in the
        DNS. </t>

    <t> Therefore the Domain Owner wishes to publish a policy that requests
        rejection of messages which fail to authenticate, strict identifier
        alignment for DKIM authentication, and relaxed identifier alignment
        for SPF checks.  Aggregate reports will only be sent to the Domain
        Owner in this example. </t>

    <t> The Domain Owner will accomplish this by constructing a policy record
        indicating that:

	<list style="symbols">
		<t> The version of DMARC being used is "DMARC1"
		    ("v=DMARC1") </t>

		<t> Receivers should reject messages that fail to authenticate
		    ("p=reject") </t>

		<t> Strict identifier alignment should be applied to DKIM checks
		    ("adkim=s") </t>

		<t> Relaxed identifier alignment should be applied to SPF checks
		    ("aspf=r") </t>

		<t> Aggregate feedback reports should be sent via email to the
		    address "dmarc-feedback@example.com"
		    ("rua=mailto:dmarc-feedback@example.com") </t>
	</list> </t>

    <t> The DMARC policy record might look like this when retrieved using a
        common command-line tool (the output shown would appear on a single
        line, but is wrapped here for publication):

        <figure><artwork>
  % dig +short TXT _dmarc.example.com
  "v=DMARC1\; p=reject\; adkim=s\; aspf=r\;
   rua=mailto:dmarc-feedback@example.com"
        </artwork></figure> </t>

   <t> To publish such a record, the DNS administrator for the Domain Owner
       might create an entry like the following in the appropriate zone
       file:

        <figure><artwork>
  ; DMARC record for the domain example.com
  _dmarc  IN  TXT  ( "v=DMARC1; p=reject; adkim=s; aspf=r; "
                     "rua=mailto:dmarc-feedback@example.com" )
        </artwork></figure> </t>
   </section>

   <section title="Sub-Domain Policy, Reporting Interval"
            anchor="ex_subdomain">
    <t> In this example the Domain Owner only uses addresses in the
        Organizational Domain itself ("user@example.com" versus
        "user@sub.example.com").  A business decision has been made that
        messages incorrectly being rejected as false positives during,
        for example, a transient outage are unacceptable.  Therefore, the
        desired policy is that:

        <list style="symbols">
		<t> Messages from the Organizational Domain that fail
		    authentication should be quarantined </t>

		<t> Messages from any sub-domain should be rejected </t>
        </list> </t>

	<t> Furthermore the Domain Owner would like to request that aggregate
	    data be sent at four hour intervals to themselves and a third-party
	    service for analysis and action.  It recognizes that not all
	    Receivers will honor this request, but feels that faster intraday
	    analysis of failures and threats make this worthwhile. </t>

        <t> The Domain Owner will accomplish this by constructing a policy
	    record indicating that:

        <list style="symbols">
		<t> The version of DMARC being used is "DMARC1"
		    ("v=DMARC1") </t>

		<t> Receivers should quarantine messages from this domain that
		    fail to authenticate ("p=quarantine") </t>

		<t> Receivers should reject messages from any sub-domains that
		    fail to authenticate ("sp=reject") </t>

		<t> Aggregate reports should be generated every four hours
		    ("ri=14400") </t>

		<t> Aggregate reports should be sent via email to the addresses
		    "dmarc-feedback@example.com" and
		    "customer-analysis@thirdparty.example.net"
 		    ("rua=mailto:dmarc-feedback@example.com,mailto:customer-data@thirdparty.example.net") </t>
        </list> </t>

        <t> The DMARC policy record might look like this when retrieved using a
            common command-line tool (the output shown would appear on a single
            line, but is wrapped here for publication):

            <figure><artwork>
  % dig +short TXT _dmarc.example.com
  "v=DMARC1\; p=quarantine\; sp=reject\; ri=14400\;
   rua=mailto:dmarc-feedback@example.com,
   mailto:customer-data@thirdparty.example.net"
            </artwork></figure></t>

        <t> To publish such a record, the DNS administrator for the Domain
            Owner might create an entry like the following in the appropriate
            zone file:

            <figure><artwork>
  ; DMARC record for the domain example.com
  _dmarc  IN  TXT  ( "v=DMARC1; p=quarantine; sp=reject; "
                     "rua=mailto:dmarc-feedback@example.com,"
                     "mailto:customer-data@thirdparty.example.net" )
            </artwork></figure></t>
   </section>
  </section>

  <section title="Mail Receiver Example" anchor="ex_receiver">
   <t> A Mail Receiver that wants to use DMARC should already be checking SPF
       and DKIM, and possess the ability to collect relevant information from
       various email processing stages to provide feedback to Domain
       Owners. </t>

   <section title="SMTP-time Processing" anchor="ex_smtp">
    <t> An optimal DMARC-enabled Mail Receiver performs authentication and
        identifier alignment checking during the <xref target="SMTP"/>
        conversation. </t>

    <t> Prior to returning a reply to the DATA command, the Mail Receiver's
        MTA has performed:

	<list style="numbers">
		<t> An SPF check to determine an SPF-authenticated
		    Identifier. </t>
		<t> DKIM checks that yield one or more DKIM-authenticated
		    Identifiers. </t>
		<t> A DMARC policy lookup. </t>
	</list> </t>

    <t> The presence of an Author Domain DMARC record indicates that the Mail
        Receiver should continue with DMARC-specific processing before
        returning a reply to the DATA command. </t>

    <t> Given a DMARC record and the set of Authenticated Identifiers, the Mail
        Receiver checks to see if the Authenticated Identifiers align with the
        Author Domain (taking into consideration any "strict" vs "relaxed"
        options found in the DMARC record). </t>

    <t> For example, the following sample data is considered to be from a
        piece of email originating from the Domain Owner of "example.com":

	<figure><artwork>
  Author Domain: example.com
  SPF-authenticated Identifier: mail.example.com
  DKIM-authenticated Identifier: example.com
  DMARC record:
    "v=DMARC1; p=reject; aspf=r;
     rua=mailto:dmarc-feedback@example.com"
	</artwork></figure> </t>

    <t> In the above sample, both the SPF and the DKIM-authenticated Identifiers
        align with the Author Domain.  The Mail Receiver considers the above
        email to pass the DMARC check, avoiding the "reject" policy that
        is to be applied to email that fails to pass the DMARC check. </t>

    <t> If no Authenticated Identifiers align with the Author Domain, then the
        Mail Receiver applies the DMARC-record-specified policy.  However,
        before this action is taken, the Mail Receiver can consult external
        information to override the Domain Owner's policy.  For example, if the
        Mail Receiver knows that this particular email came from a known and
        trusted forwarder (that happens to break both SPF and DKIM), then the
        Mail Receiver may choose to ignore the Domain Owner's policy. </t>

    <t> The Mail Receiver is now ready to reply to the DATA command.  If the
        DMARC check yields that the message is to be rejected, then the Mail
        Receiver replies with a 550 code to inform the sender of failure.  If
        the DMARC check cannot be resolved due to transient network errors,
        then the Mail Receiver replies with a 450 code to inform the sender
        as to the need to reattempt delivery later.  If the DMARC check
        yields a passing message, then the Mail Receiver continues on with
        email processing, perhaps using the result of the DMARC check as an
        input to additional processing modules such as a domain reputation
        query. </t>

    <t> Before exiting DMARC-specific processing, the Mail Receiver checks to
        see if the Author Domain DMARC record requests AFRF-based reporting.
        If so, then the Mail Receiver can emit an AFRF to the reporting address
        supplied in the DMARC record. </t>

    <t> At the exit of DMARC-specific processing, the Mail Receiver captures
        (through logging or direct insertion into a data store) the result of
        DMARC processing.  Captured information is used to build feedback for
        Domain Owner consumption. </t>
   </section>

   <section title="Real-time Feedback Processing" anchor="ex_afrf">
    <t> If the DMARC record for the Author Domain of the message under
        processing requests <xref target="AFRF"/>-based reporting, then the
	Mail Receiver can
        supply an AFRF report for a message that does not pass all underlying
        DMARC authentication checks.  In other words, if any DMARC-supporting
        authentication checks fail, an AFRF report should be generated and
        sent to the reporting address found in the Author Domain's DMARC
        record. </t>
   </section>
  </section>

  <section title="Utilization of Aggregate Feedback example" anchor="ex_ag_fb">
   <t> Aggregate feedback is consumed by Domain Owners to verify the Domain
       Owners understanding of how the Domain Owner's Domain is being processed
       by the Mail Receiver.  Aggregate reporting data on emails that pass all
       DMARC-supporting authentication checks is used by Domain Owners to
       verify that authentication practices remain accurate.  For example, if
       a third party is sending on behalf of a Domain Owner, the Domain Owner
       can use aggregate report data to verify ongoing authentication
       practices of the third party. </t>

   <t> Data on email that only partially passes underlying authentication
       checks provides visibility into problems that need to be addressed by
       the Domain Owner.  For example, if either SPF or DKIM fail to pass, the
       Domain Owner is provided with enough information to either directly
       correct the problem or to understand where authentication-breaking
       changes are being introduced in the email transmission path.  If
       authentication-breaking changes due to email transmission path cannot be
       directly corrected, then the Domain Owner at least maintains an
       understanding of the effect of DMARC-based policies upon the Domain
       Owner's email. </t>

   <t> Data on email that fails all underlying authentication checks provides
       baseline visibility on how the Domain Owner's Domain is being received
       at the Mail Receiver.  Based on this visibility, the Domain Owner can
       begin deployment of authentication technologies across uncovered email
       sources.  Additionally, the Domain Owner may come to an understanding
       of how its Domain is being misused. </t>
  </section>

  <section title="mailto Transport example" anchor="ex_mailto">
   <t> A DMARC record can contain a "mailto" reporting address, such as:

	<figure><artwork>
  mailto:dmarc-feedback@example.com
	</artwork></figure></t>

   <t> A sample aggregate report from the Mail Receiver at
       mail.receiver.example follows:

	<figure><artwork>
  DKIM-Signature: v=1; ...; d=mail.receiver.example; ...
  From: dmarc-reporting@mail.receiver.example
  Date: Fri, Feb 15 2002 16:54:30 -0800
  To: dmarc-feedback@example.com
  Subject: Report Domain: example.com
      Submitter: mail.receiver.example
      Report-ID: &lt;2002.02.15.1&gt;
  MIME-Version: 1.0
  Content-Type: multipart/alternative;
      boundary="----=_NextPart_000_024E_01CC9B0A.AFE54C00"
  Content-Language: en-us
    
  This is a multipart message in MIME format.
    
  ------=_NextPart_000_024E_01CC9B0A.AFE54C00
  Content-Type: text/plain; charset="us-ascii"
  Content-Transfer-Encoding: 7bit
    
  This is an aggregate report from mail.receiver.example.
    
  ------=_NextPart_000_024E_01CC9B0A.AFE54C00
  Content-Type: application/gzip
  Content-Transfer-Encoding: base64
  Content-Disposition: attachment;
      filename="mail.receiver.example!example.com!
                1013662812!1013749130.gzip"
    
  &lt;gzipped content of report&gt;
    
  ------=_NextPart_000_024E_01CC9B0A.AFE54C00--
	</artwork></figure></t>

   <t> Not shown in the above example is that the Mail Receiver's feedback
       should be authenticated using SPF.  Also, the value of the "filename"
       MIME parameter is wrapped for printing in this specification but
       would normally appear as one continuous string. </t>
  </section>

  <section title="https Transport example" anchor="ex_https">
   <t> A DMARC record can contain an "https" reporting address, such as:

	<figure><artwork>
  https:feedback.example.com/dmarc-feedback-submissions
	</artwork></figure></t>

   <t> A sample aggregate report from the Mail Receiver at
       mail.receiver.example, being posted per the above URL via an established
       secure HTTP (https) connection, might look like this:

	<figure><artwork>
  POST /dmarc-feedback-submissions HTTP/1.1
  Host: feedback.example.com
  Subject: Report Domain: example.com
      Submitter: mail.receiver.example
      Report-ID: &lt;2002.02.15.1&gt;
  Content-Type: application/gzip
  Content-Length: 19191
    
  &lt;gzipped content of report here&gt;
	</artwork></figure></t>
  </section>
 </section> <!-- Examples -->

 <section title="DMARC XML Schema" anchor="xml_schema">
  <t> The following is the proposed initial schema for producing XML
      formatted aggregate reports as described in this memo:

	<figure><artwork>
&lt;?xml version="1.0"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://dmarc.org/dmarc-xml/0.1"&gt;

&lt;!-- The time range in UTC covered by messages in this report,
     specified in seconds since epoch. --&gt;
&lt;xs:complexType name="DateRangeType"&gt;
  &lt;xs:all&gt;
    &lt;xs:element name="begin" type="xs:integer"/&gt;
    &lt;xs:element name="end" type="xs:integer"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- Report generator metadata --&gt;
&lt;xs:complexType name="ReportMetadataType"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="org_name" type="xs:string"/&gt;
    &lt;xs:element name="email" type="xs:string"/&gt;
    &lt;xs:element name="extra_contact_info" type="xs:string"
               minOccurs="0"/&gt;
    &lt;xs:element name="report_id" type="xs:string"/&gt;
    &lt;xs:element name="date_range" type="DateRangeType"/&gt;
    &lt;xs:element name="error" type="xs:string" minOccurs="0"
      maxOccurs="unbounded"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;

&lt;!-- Alignment mode (relaxed or strict) for DKIM and
     SPF. --&gt;
&lt;xs:simpleType name="AlignmentType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="r"/&gt;
    &lt;xs:enumeration value="s"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;!-- The policy actions specified by p and sp in the
     DMARC record. --&gt;
&lt;xs:simpleType name="DispositionType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="none"/&gt;
    &lt;xs:enumeration value="quarantine"/&gt;
    &lt;xs:enumeration value="reject"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;!-- The DMARC policy that applied to the messages in
    this report. --&gt;
&lt;xs:complexType name="PolicyPublishedType"&gt;
  &lt;xs:all&gt;
    &lt;!-- The domain at which the DMARC record was found. --&gt;
    &lt;xs:element name="domain" type="xs:string"/&gt;
    &lt;!-- The DKIM alignment mode. --&gt;
    &lt;xs:element name="adkim" type="AlignmentType"/&gt;
    &lt;!-- The SPF alignment mode. --&gt;
    &lt;xs:element name="aspf" type="AlignmentType"/&gt;
    &lt;!-- The policy to apply to messages from the domain. --&gt;
    &lt;xs:element name="p" type="DispositionType"/&gt;
    &lt;!-- The policy to apply to messages from subdomains. --&gt;
    &lt;xs:element name="sp" type="DispositionType"/&gt;
    &lt;!-- The percent of messages to which policy applies. --&gt;
    &lt;xs:element name="pct" type="xs:integer"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- The DMARC-aligned authentication result. --&gt;
&lt;xs:simpleType name="DMARCResultType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="pass"/&gt;
    &lt;xs:enumeration value="fail"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;!-- Reasons that may affect DMARC disposition or execution
     thereof. --&gt;
&lt;xs:simpleType name="PolicyOverrideType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="forwarded"/&gt;
    &lt;xs:enumeration value="sampled_out"/&gt;
    &lt;xs:enumeration value="trusted_forwarder"/&gt;
    &lt;xs:enumeration value="mailing_list"/&gt;
    &lt;xs:enumeration value="local_policy"/&gt;
    &lt;xs:enumeration value="other"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;!-- How do we allow report generators to include new
     classes of override reasons if they want to be more
     specific than "other"? --&gt;
&lt;xs:complexType name="PolicyOverrideReason"&gt;
  &lt;xs:all&gt;
    &lt;xs:element name="type" type="PolicyOverrideType"/&gt;
    &lt;xs:element name="comment" type="xs:string"
               minOccurs="0"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- Taking into account everything else in the record,
     the results of applying DMARC. --&gt;
&lt;xs:complexType name="PolicyEvaluatedType"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="disposition" type="DispositionType"/&gt;
    &lt;xs:element name="dkim" type="DMARCResultType"/&gt;
    &lt;xs:element name="spf" type="DMARCResultType"/&gt;
    &lt;xs:element name="reason" type="PolicyOverrideReason"
                  minOccurs="0" maxOccurs="unbounded"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;

&lt;!-- Credit to Roger L. Costello for IPv4 regex
    http://mailman.ic.ac.uk/pipermail/xml-dev/1999-December/
         018018.html --&gt;
&lt;!-- Credit to java2s.com for IPv6 regex
    http://www.java2s.com/Code/XML/XML-Schema/
         IPv6addressesareeasiertodescribeusingasimpleregex.htm --&gt;
&lt;xs:simpleType name="IPAddress"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}
                (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])|
                ([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;xs:complexType name="RowType"&gt;
  &lt;xs:all&gt;
    &lt;!-- The connecting IP. --&gt;
    &lt;xs:element name="source_ip" type="IPAddress"/&gt;
    &lt;!-- The number of matching messages --&gt;
    &lt;xs:element name="count" type="xs:integer"/&gt;
    &lt;!-- The DMARC disposition applying to matching
         messages. --&gt;
    &lt;xs:element name="policy_evaluated"
                type="PolicyEvaluatedType"
                minOccurs="0"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;xs:complexType name="IdentifierType"&gt;
  &lt;xs:all&gt;
    &lt;!-- The envelope recipient domain. --&gt;
    &lt;xs:element name="envelope_to" type="xs:string"
               minOccurs="0"/&gt;
    &lt;!-- The envelope from domain. --&gt;
    &lt;xs:element name="envelope_from" type="xs:string"
               minOccurs="1"/&gt;
    &lt;!-- The payload From domain. --&gt;
    &lt;xs:element name="header_from" type="xs:string"
               minOccurs="1"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- DKIM verification result, according to RFC 5451
     Section 2.4.1. --&gt;
&lt;xs:simpleType name="DKIMResultType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="none"/&gt;
    &lt;xs:enumeration value="pass"/&gt;
    &lt;xs:enumeration value="fail"/&gt;
    &lt;xs:enumeration value="policy"/&gt;
    &lt;xs:enumeration value="neutral"/&gt;
    &lt;xs:enumeration value="temperror"/&gt;
    &lt;xs:enumeration value="permerror"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;xs:complexType name="DKIMAuthResultType"&gt;
  &lt;xs:all&gt;
    &lt;!-- The d= parameter in the signature --&gt;
    &lt;xs:element name="domain" type="xs:string"
                minOccurs="1"/&gt;
    &lt;!-- The DKIM verification result --&gt;
    &lt;xs:element name="result" type="DKIMResultType"
                minOccurs="1"/&gt;
    &lt;!-- Any extra information (e.g., from
         Authentication-Results --&gt;
    &lt;xs:element name="human_result" type="xs:string"
                minOccurs="0"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- SPF domain scope --&gt;
&lt;xs:simpleType name="SPFDomainScope"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="helo"/&gt;
    &lt;xs:enumeration value="mfrom"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;!-- SPF result --&gt;
&lt;xs:simpleType name="SPFResultType"&gt;
  &lt;xs:restriction base="xs:string"&gt;
    &lt;xs:enumeration value="none"/&gt;
    &lt;xs:enumeration value="neutral"/&gt;
    &lt;xs:enumeration value="pass"/&gt;
    &lt;xs:enumeration value="fail"/&gt;
    &lt;xs:enumeration value="softfail"/&gt;
    &lt;!-- "TempError" commonly implemented as "unknown" --&gt;
    &lt;xs:enumeration value="temperror"/&gt;
    &lt;!-- "PermError" commonly implemented as "error" --&gt;
    &lt;xs:enumeration value="permerror"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

&lt;xs:complexType name="SPFAuthResultType"&gt;
  &lt;xs:all&gt;
    &lt;!-- The checked domain. --&gt;
    &lt;xs:element name="domain" type="xs:string" minOccurs="1"/&gt;
    &lt;!-- The scope of the checked domain. --&gt;
    &lt;xs:element name="scope" type="SPFDomainScope" minOccurs="1"/&gt;
    &lt;!-- The SPF verification result --&gt;
    &lt;xs:element name="result" type="SPFResultType"
                minOccurs="1"/&gt;
  &lt;/xs:all&gt;
&lt;/xs:complexType&gt;

&lt;!-- This element contains DKIM and SPF results, uninterpreted
     with respect to DMARC. --&gt;
&lt;xs:complexType name="AuthResultType"&gt;
  &lt;xs:sequence&gt;
    &lt;!-- There may be no DKIM signatures, or multiple DKIM
         signatures. --&gt;
    &lt;xs:element name="dkim" type="DKIMAuthResultType"
      minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;!-- There will always be at least one SPF result. --&gt;
    &lt;xs:element name="spf" type="SPFAuthResultType" minOccurs="1"
      maxOccurs="unbounded"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;

&lt;!-- This element contains all the authentication results used
     to evaluate the DMARC disposition for the given set of
     messages. --&gt;
&lt;xs:complexType name="RecordType"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="row" type="RowType"/&gt;
    &lt;xs:element name="identifiers" type="IdentifierType"/&gt;
    &lt;xs:element name="auth_results" type="AuthResultType"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;

&lt;!-- Parent --&gt;
&lt;xs:element name="feedback"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="report_metadata"
                 type="ReportMetadataType"/&gt;
      &lt;xs:element name="policy_published"
                 type="PolicyPublishedType"/&gt;
      &lt;xs:element name="record" type="RecordType"
                  maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;
&lt;/xs:schema&gt;
	</artwork></figure> </t>

	<t> Note that minOccurs and maxOccurs both default to 1 according
	    to the XML definition. </t>

	<t> Descriptions of the PolicyOverrideTypes:

	    <list style="hanging">
		<t hangText="forwarded:"> Message was relayed via a known
			forwarder, or local heuristics identified the message
			as likely having been forwarded.  There is no
			expectation that authentication would pass. </t>

		<t hangText="local_policy:"> The Mail Receiver's local policy
			exempted the message from being subjected to the
			Domain Owner's requested policy action. </t>

		<t hangText="mailing_list:"> Local heuristics determined that
			the message arrived via a mailing list, and thus
			authentication of the original message was not
			expected to succeed. </t>

		<t hangText="other:"> Some policy exception not covered by
			the other entries in this list occurred.  Additional
			detail can be found in the PolicyOverrideReason's
			"comment" field. </t>

		<t hangText="sampled_out:"> Message was exempted from
			application of policy by the "pct" setting in the
			DMARC policy record. </t>

		<t hangText="trusted_forwarder:"> Message authentication
			failure was anticipated by other evidence linking
			the message to a locally-maintained list of known
			and trusted forwarders. </t>
	    </list> </t>
 </section>

 <section title="Public Discussion" anchor="public">
  <t> Public discussion of the DMARC proposal documents is taking place on
      the dmarc-discuss@dmarc.org mailing list.  Subscription is
      available at http://www.dmarc.org/mailman/listinfo/dmarc-discuss. </t>
 </section>
  </back>
</rfc>
